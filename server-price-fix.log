
> rest-express@1.0.0 dev
> NODE_ENV=development tsx server/index.ts

🚀 Pre-loading UST curve data on startup...
Fetching UST yield curve from FRED API...
6:21:59 PM [express] serving on port 3000
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 399,
    "heapUsed": 72,
    "heapTotal": 109,
    "external": 5
  },
  "uptime": 1
}
Browserslist: browsers data (caniuse-lite) is 8 months old. Please run:
  npx update-browserslist-db@latest
  Why you should do it regularly: https://github.com/browserslist/update-db#readme
✓ UST curve fetched from FRED: 2025-06-12 (11 tenors)
✅ UST curve data pre-loaded successfully
   Date: 2025-06-12
   Tenors: 11 points
   1M: 4.180% | 10Y: 4.360% | 30Y: 4.840%
6:22:00 PM [express] GET /api/bonds/saved 304 in 3ms :: {"bonds":[{"filename":"GD29_ARGENTINA_100pct…
6:22:00 PM [express] GET /api/bonds/saved/GD30_ARGENTINA_075pct_20300709.json 304 in 0ms :: {"metada…
🔍 buildBond received bond with predefinedCashFlows: 19
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 13 entries
🔍 Adding 4%, running total: 4%
🔍 Adding 8%, running total: 12%
🔍 Adding 8%, running total: 20%
🔍 Adding 8%, running total: 28%
🔍 Adding 8%, running total: 36%
🔍 Adding 8%, running total: 44%
🔍 Adding 8%, running total: 52%
🔍 Adding 8%, running total: 60%
🔍 Adding 8%, running total: 68%
🔍 Adding 8%, running total: 76%
🔍 Adding 8%, running total: 84%
🔍 Adding 8%, running total: 92%
🔍 Adding 8%, running total: 100%
🔍 Final amortization total: 100% (VALID)
🔄 Using predefined cash flows: 19 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 880,
  settlementDate: '2025-06-14',
  outstandingRatio: 0.88,
  note: 'Using actual outstanding principal after amortization'
}
💰 Cash flow filtering: Total 19 → Future 11 (settlement: 2025-06-14)
📥 Backend received: {
  marketPrice: 100,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2030-07-09'
}
🔍 Calculation inputs - Price: 100, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 100
🔍 Price input: 100 (100.00% of outstanding principal)
🔍 Effective dollar price: $880 (100% of $880)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 11,
  price: 100,
  settlementDate: '2025-06-14',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 880,
  currentOutstanding: 880,
  settlementDate: '2025-06-14',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 880
  - Cash Flows: 11
  - Total CF Amount: 911
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 911
  - Target Price: 880
  - Total Return: 1.0352
  - Average Time: 2.56 years
  - Simple: 1.36%, Current Yield: 72.02%, IRR: 1.37%
  - Final Guess: 1.37%
    Iteration 0: yield = 1.372%, error = 0.002151
  ✅ Newton-Raphson converged: YTM = 1.372%
🔄 Z-Spread Calculation:
  - Target Price: 880
  - Cash Flows: 11
  - Z-Spread final: -100 bps
🔍 RAW CALCULATOR RESULT: {
  yields: {
    ytm: 1.3718341152304814,
    ytw: 1.3718341152304814,
    current: 0.7159090909090909
  },
  risk: {
    modifiedDuration: 2.489911572152379,
    macaulayDuration: 2.524069028538237,
    effectiveDuration: 2.4899116787003117,
    convexity: 11.069886246376418,
    dv01: 0.21911221834940936
  },
  price: {
    clean: 100,
    dirty: 100,
    cleanDollar: 880,
    dirtyDollar: 880,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 2.569846307012632,
    totalCashFlows: 911,
    daysToNextPayment: 25,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 83.3
  },
  spreads: { treasury: -346.81658847695184, zSpread: -99.99999999999974 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 100,
  dirty: 100,
  cleanDollar: 880,
  dirtyDollar: 880,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 1.3718341152304814,
  duration: 2.489911572152379,
  cleanPrice: 100,
  spread: -346.81658847695184
}
6:22:00 PM [express] POST /api/bonds/build 200 in 26ms :: {"bond":{"issuer":"REPUBLIC OF ARGENTINA",…
6:22:00 PM [express] GET /api/bonds/saved 304 in 2ms :: {"bonds":[{"filename":"GD29_ARGENTINA_100pct…
📊 Calculate request received with predefinedCashFlows? true
📊 Number of predefined cash flows: 19
📊 Parsed bond data has predefinedCashFlows? true
🔍 buildBond received bond with predefinedCashFlows: 19
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 13 entries
🔍 Adding 4%, running total: 4%
🔍 Adding 8%, running total: 12%
🔍 Adding 8%, running total: 20%
🔍 Adding 8%, running total: 28%
🔍 Adding 8%, running total: 36%
🔍 Adding 8%, running total: 44%
🔍 Adding 8%, running total: 52%
🔍 Adding 8%, running total: 60%
🔍 Adding 8%, running total: 68%
🔍 Adding 8%, running total: 76%
🔍 Adding 8%, running total: 84%
🔍 Adding 8%, running total: 92%
🔍 Adding 8%, running total: 100%
🔍 Final amortization total: 100% (VALID)
🔄 Using predefined cash flows: 19 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 880,
  settlementDate: '2025-06-14',
  outstandingRatio: 0.88,
  note: 'Using actual outstanding principal after amortization'
}
💰 Cash flow filtering: Total 19 → Future 11 (settlement: 2025-06-14)
📥 Backend received: {
  marketPrice: 100,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2030-07-09'
}
🔍 Calculation inputs - Price: 100, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 100
🔍 Price input: 100 (100.00% of outstanding principal)
🔍 Effective dollar price: $880 (100% of $880)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 11,
  price: 100,
  settlementDate: '2025-06-14',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 880,
  currentOutstanding: 880,
  settlementDate: '2025-06-14',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 880
  - Cash Flows: 11
  - Total CF Amount: 911
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 911
  - Target Price: 880
  - Total Return: 1.0352
  - Average Time: 2.56 years
  - Simple: 1.36%, Current Yield: 72.02%, IRR: 1.37%
  - Final Guess: 1.37%
    Iteration 0: yield = 1.372%, error = 0.002151
  ✅ Newton-Raphson converged: YTM = 1.372%
🔄 Z-Spread Calculation:
  - Target Price: 880
  - Cash Flows: 11
  - Z-Spread final: -100 bps
🔍 RAW CALCULATOR RESULT: {
  yields: {
    ytm: 1.3718341152304814,
    ytw: 1.3718341152304814,
    current: 0.7159090909090909
  },
  risk: {
    modifiedDuration: 2.489911572152379,
    macaulayDuration: 2.524069028538237,
    effectiveDuration: 2.4899116787003117,
    convexity: 11.069886246376418,
    dv01: 0.21911221834940936
  },
  price: {
    clean: 100,
    dirty: 100,
    cleanDollar: 880,
    dirtyDollar: 880,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 2.569846307012632,
    totalCashFlows: 911,
    daysToNextPayment: 25,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 83.3
  },
  spreads: { treasury: -346.81658847695184, zSpread: -99.99999999999974 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 100,
  dirty: 100,
  cleanDollar: 880,
  dirtyDollar: 880,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 1.3718341152304814,
  duration: 2.489911572152379,
  cleanPrice: 100,
  spread: -346.81658847695184
}
6:22:01 PM [express] POST /api/bonds/calculate 200 in 15ms :: {"analytics":{"yieldToMaturity":1.3718…
📊 Calculate request received with predefinedCashFlows? true
📊 Number of predefined cash flows: 19
📊 Parsed bond data has predefinedCashFlows? true
🔍 buildBond received bond with predefinedCashFlows: 19
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 13 entries
🔍 Adding 4%, running total: 4%
🔍 Adding 8%, running total: 12%
🔍 Adding 8%, running total: 20%
🔍 Adding 8%, running total: 28%
🔍 Adding 8%, running total: 36%
🔍 Adding 8%, running total: 44%
🔍 Adding 8%, running total: 52%
🔍 Adding 8%, running total: 60%
🔍 Adding 8%, running total: 68%
🔍 Adding 8%, running total: 76%
🔍 Adding 8%, running total: 84%
🔍 Adding 8%, running total: 92%
🔍 Adding 8%, running total: 100%
🔍 Final amortization total: 100% (VALID)
🔄 Using predefined cash flows: 19 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 880,
  settlementDate: '2025-06-14',
  outstandingRatio: 0.88,
  note: 'Using actual outstanding principal after amortization'
}
💰 Cash flow filtering: Total 19 → Future 11 (settlement: 2025-06-14)
📥 Backend received: {
  marketPrice: 80,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2030-07-09'
}
🔍 Calculation inputs - Price: 80, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 80
🔍 Price input: 80 (80.00% of outstanding principal)
🔍 Effective dollar price: $704 (80% of $880)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 11,
  price: 80,
  settlementDate: '2025-06-14',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 880,
  currentOutstanding: 880,
  settlementDate: '2025-06-14',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 704
  - Cash Flows: 11
  - Total CF Amount: 911
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 911
  - Target Price: 704
  - Total Return: 1.2940
  - Average Time: 2.56 years
  - Simple: 10.60%, Current Yield: 80.26%, IRR: 11.21%
  - Final Guess: 11.21%
    Iteration 0: yield = 11.208%, error = 0.000230
    Iteration 5: yield = 11.208%, error = 0.000000
  ✅ Newton-Raphson converged: YTM = 11.208%
🔄 Z-Spread Calculation:
  - Target Price: 704
  - Cash Flows: 11
  - Z-Spread final: 500 bps
🔍 RAW CALCULATOR RESULT: {
  yields: {
    ytm: 11.207745354155056,
    ytw: 11.207745354155056,
    current: 0.8948863636363636
  },
  risk: {
    modifiedDuration: 2.0644847943959843,
    macaulayDuration: 2.2958669930271376,
    effectiveDuration: 2.0644848639584232,
    convexity: 8.089464234958278,
    dv01: 0.1453397295254773
  },
  price: {
    clean: 80,
    dirty: 80,
    cleanDollar: 704,
    dirtyDollar: 704,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 2.569846307012632,
    totalCashFlows: 911,
    daysToNextPayment: 25,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 83.3
  },
  spreads: { treasury: 636.7745354155056, zSpread: 499.9999999999998 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 80,
  dirty: 80,
  cleanDollar: 704,
  dirtyDollar: 704,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 11.207745354155056,
  duration: 2.0644847943959843,
  cleanPrice: 80,
  spread: 636.7745354155056
}
6:22:37 PM [express] POST /api/bonds/calculate 200 in 37ms :: {"analytics":{"yieldToMaturity":11.207…
📊 Calculate request received with predefinedCashFlows? true
📊 Number of predefined cash flows: 19
📊 Parsed bond data has predefinedCashFlows? true
🔍 buildBond received bond with predefinedCashFlows: 19
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 13 entries
🔍 Adding 4%, running total: 4%
🔍 Adding 8%, running total: 12%
🔍 Adding 8%, running total: 20%
🔍 Adding 8%, running total: 28%
🔍 Adding 8%, running total: 36%
🔍 Adding 8%, running total: 44%
🔍 Adding 8%, running total: 52%
🔍 Adding 8%, running total: 60%
🔍 Adding 8%, running total: 68%
🔍 Adding 8%, running total: 76%
🔍 Adding 8%, running total: 84%
🔍 Adding 8%, running total: 92%
🔍 Adding 8%, running total: 100%
🔍 Final amortization total: 100% (VALID)
🔄 Using predefined cash flows: 19 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 880,
  settlementDate: '2025-06-14',
  outstandingRatio: 0.88,
  note: 'Using actual outstanding principal after amortization'
}
💰 Cash flow filtering: Total 19 → Future 11 (settlement: 2025-06-14)
📥 Backend received: {
  marketPrice: 100,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2030-07-09'
}
🔍 Calculation inputs - Price: 100, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 100
🔍 Price input: 100 (100.00% of outstanding principal)
🔍 Effective dollar price: $880 (100% of $880)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 11,
  price: 100,
  settlementDate: '2025-06-14',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 880,
  currentOutstanding: 880,
  settlementDate: '2025-06-14',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 880
  - Cash Flows: 11
  - Total CF Amount: 911
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 911
  - Target Price: 880
  - Total Return: 1.0352
  - Average Time: 2.56 years
  - Simple: 1.36%, Current Yield: 72.02%, IRR: 1.37%
  - Final Guess: 1.37%
    Iteration 0: yield = 1.372%, error = 0.002151
  ✅ Newton-Raphson converged: YTM = 1.372%
🔄 Z-Spread Calculation:
  - Target Price: 880
  - Cash Flows: 11
  - Z-Spread final: -100 bps
🔍 RAW CALCULATOR RESULT: {
  yields: {
    ytm: 1.3718341152304814,
    ytw: 1.3718341152304814,
    current: 0.7159090909090909
  },
  risk: {
    modifiedDuration: 2.489911572152379,
    macaulayDuration: 2.524069028538237,
    effectiveDuration: 2.4899116787003117,
    convexity: 11.069886246376418,
    dv01: 0.21911221834940936
  },
  price: {
    clean: 100,
    dirty: 100,
    cleanDollar: 880,
    dirtyDollar: 880,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 2.569846307012632,
    totalCashFlows: 911,
    daysToNextPayment: 25,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 83.3
  },
  spreads: { treasury: -346.81658847695184, zSpread: -99.99999999999974 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 100,
  dirty: 100,
  cleanDollar: 880,
  dirtyDollar: 880,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 1.3718341152304814,
  duration: 2.489911572152379,
  cleanPrice: 100,
  spread: -346.81658847695184
}
6:22:41 PM [express] POST /api/bonds/calculate 200 in 22ms :: {"analytics":{"yieldToMaturity":1.3718…
📊 Calculate request received with predefinedCashFlows? true
📊 Number of predefined cash flows: 19
📊 Parsed bond data has predefinedCashFlows? true
🔍 buildBond received bond with predefinedCashFlows: 19
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 13 entries
🔍 Adding 4%, running total: 4%
🔍 Adding 8%, running total: 12%
🔍 Adding 8%, running total: 20%
🔍 Adding 8%, running total: 28%
🔍 Adding 8%, running total: 36%
🔍 Adding 8%, running total: 44%
🔍 Adding 8%, running total: 52%
🔍 Adding 8%, running total: 60%
🔍 Adding 8%, running total: 68%
🔍 Adding 8%, running total: 76%
🔍 Adding 8%, running total: 84%
🔍 Adding 8%, running total: 92%
🔍 Adding 8%, running total: 100%
🔍 Final amortization total: 100% (VALID)
🔄 Using predefined cash flows: 19 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 880,
  settlementDate: '2025-06-14',
  outstandingRatio: 0.88,
  note: 'Using actual outstanding principal after amortization'
}
💰 Cash flow filtering: Total 19 → Future 11 (settlement: 2025-06-14)
📥 Backend received: {
  marketPrice: 90,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2030-07-09'
}
🔍 Calculation inputs - Price: 90, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 90
🔍 Price input: 90 (90.00% of outstanding principal)
🔍 Effective dollar price: $792 (90% of $880)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 11,
  price: 90,
  settlementDate: '2025-06-14',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 880,
  currentOutstanding: 880,
  settlementDate: '2025-06-14',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 792
  - Cash Flows: 11
  - Total CF Amount: 911
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 911
  - Target Price: 792
  - Total Return: 1.1503
  - Average Time: 2.56 years
  - Simple: 5.63%, Current Yield: 75.68%, IRR: 5.79%
  - Final Guess: 5.79%
    Iteration 0: yield = 5.787%, error = 0.000004
  ✅ Newton-Raphson converged: YTM = 5.787%
🔄 Z-Spread Calculation:
  - Target Price: 792
  - Cash Flows: 11
  - Z-Spread converged: 97 bps
🔍 RAW CALCULATOR RESULT: {
  yields: {
    ytm: 5.787226854451332,
    ytw: 5.787226854451332,
    current: 0.7954545454545454
  },
  risk: {
    modifiedDuration: 2.2862097397168584,
    macaulayDuration: 2.418517883722834,
    effectiveDuration: 2.286209827409035,
    convexity: 9.59370903612793,
    dv01: 0.1810678113855752
  },
  price: {
    clean: 90,
    dirty: 90,
    cleanDollar: 792,
    dirtyDollar: 792,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 2.569846307012632,
    totalCashFlows: 911,
    daysToNextPayment: 25,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 83.3
  },
  spreads: { treasury: 94.72268544513325, zSpread: 96.5087890625 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 90,
  dirty: 90,
  cleanDollar: 792,
  dirtyDollar: 792,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 5.787226854451332,
  duration: 2.2862097397168584,
  cleanPrice: 90,
  spread: 94.72268544513325
}
6:22:44 PM [express] POST /api/bonds/calculate 200 in 21ms :: {"analytics":{"yieldToMaturity":5.7872…
📊 Calculate request received with predefinedCashFlows? true
📊 Number of predefined cash flows: 19
📊 Parsed bond data has predefinedCashFlows? true
🔍 buildBond received bond with predefinedCashFlows: 19
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 13 entries
🔍 Adding 4%, running total: 4%
🔍 Adding 8%, running total: 12%
🔍 Adding 8%, running total: 20%
🔍 Adding 8%, running total: 28%
🔍 Adding 8%, running total: 36%
🔍 Adding 8%, running total: 44%
🔍 Adding 8%, running total: 52%
🔍 Adding 8%, running total: 60%
🔍 Adding 8%, running total: 68%
🔍 Adding 8%, running total: 76%
🔍 Adding 8%, running total: 84%
🔍 Adding 8%, running total: 92%
🔍 Adding 8%, running total: 100%
🔍 Final amortization total: 100% (VALID)
🔄 Using predefined cash flows: 19 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 880,
  settlementDate: '2025-06-14',
  outstandingRatio: 0.88,
  note: 'Using actual outstanding principal after amortization'
}
💰 Cash flow filtering: Total 19 → Future 11 (settlement: 2025-06-14)
📥 Backend received: {
  marketPrice: 90,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2030-07-09'
}
🔍 Calculation inputs - Price: 90, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 90
🔍 Price input: 90 (90.00% of outstanding principal)
🔍 Effective dollar price: $792 (90% of $880)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 11,
  price: 90,
  settlementDate: '2025-06-14',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 880,
  currentOutstanding: 880,
  settlementDate: '2025-06-14',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 792
  - Cash Flows: 11
  - Total CF Amount: 911
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 911
  - Target Price: 792
  - Total Return: 1.1503
  - Average Time: 2.56 years
  - Simple: 5.63%, Current Yield: 75.68%, IRR: 5.79%
  - Final Guess: 5.79%
    Iteration 0: yield = 5.787%, error = 0.000004
  ✅ Newton-Raphson converged: YTM = 5.787%
🔄 Z-Spread Calculation:
  - Target Price: 792
  - Cash Flows: 11
  - Z-Spread converged: 97 bps
🔍 RAW CALCULATOR RESULT: {
  yields: {
    ytm: 5.787226854451332,
    ytw: 5.787226854451332,
    current: 0.7954545454545454
  },
  risk: {
    modifiedDuration: 2.2862097397168584,
    macaulayDuration: 2.418517883722834,
    effectiveDuration: 2.286209827409035,
    convexity: 9.59370903612793,
    dv01: 0.1810678113855752
  },
  price: {
    clean: 90,
    dirty: 90,
    cleanDollar: 792,
    dirtyDollar: 792,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 2.569846307012632,
    totalCashFlows: 911,
    daysToNextPayment: 25,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 83.3
  },
  spreads: { treasury: 94.72268544513325, zSpread: 96.5087890625 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 90,
  dirty: 90,
  cleanDollar: 792,
  dirtyDollar: 792,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 5.787226854451332,
  duration: 2.2862097397168584,
  cleanPrice: 90,
  spread: 94.72268544513325
}
6:22:48 PM [express] POST /api/bonds/calculate 200 in 20ms :: {"analytics":{"yieldToMaturity":5.7872…
📊 Calculate request received with predefinedCashFlows? true
📊 Number of predefined cash flows: 19
📊 Parsed bond data has predefinedCashFlows? true
🔍 buildBond received bond with predefinedCashFlows: 19
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 13 entries
🔍 Adding 4%, running total: 4%
🔍 Adding 8%, running total: 12%
🔍 Adding 8%, running total: 20%
🔍 Adding 8%, running total: 28%
🔍 Adding 8%, running total: 36%
🔍 Adding 8%, running total: 44%
🔍 Adding 8%, running total: 52%
🔍 Adding 8%, running total: 60%
🔍 Adding 8%, running total: 68%
🔍 Adding 8%, running total: 76%
🔍 Adding 8%, running total: 84%
🔍 Adding 8%, running total: 92%
🔍 Adding 8%, running total: 100%
🔍 Final amortization total: 100% (VALID)
🔄 Using predefined cash flows: 19 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 880,
  settlementDate: '2025-06-14',
  outstandingRatio: 0.88,
  note: 'Using actual outstanding principal after amortization'
}
💰 Cash flow filtering: Total 19 → Future 11 (settlement: 2025-06-14)
📥 Backend received: {
  marketPrice: undefined,
  targetYield: 5.787,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2030-07-09'
}
🔍 Calculation inputs - Price: undefined, Yield: 5.787, Spread: undefined
🎯 YTM → Price mode. Target YTM: 5.787
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 880,
  currentOutstanding: 880,
  settlementDate: '2025-06-14',
  outstandingRatio: 1
}
🔄 Z-Spread Calculation:
  - Target Price: 792.0041076234834
  - Cash Flows: 11
  - Z-Spread converged: 96 bps
🔍 RAW CALCULATOR RESULT: {
  yields: { ytm: 5.787, ytw: 5.787, current: 0.7954504199358272 },
  risk: {
    modifiedDuration: 2.2862196463741062,
    macaulayDuration: 2.418523177309776,
    effectiveDuration: 2.2862197340675787,
    convexity: 9.593778640651859,
    dv01: 0.18106953508577997
  },
  price: {
    clean: 90.00046677539584,
    dirty: 90.00046677539584,
    cleanDollar: 792.0041076234834,
    dirtyDollar: 792.0041076234834,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 2.569846307012632,
    totalCashFlows: 911,
    daysToNextPayment: 25,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 83.3
  },
  spreads: { treasury: 94.7, zSpread: 96.435546875 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 90.00046677539584,
  dirty: 90.00046677539584,
  cleanDollar: 792.0041076234834,
  dirtyDollar: 792.0041076234834,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 5.787,
  duration: 2.2862196463741062,
  cleanPrice: 90.00046677539584,
  spread: 94.7
}
6:22:50 PM [express] POST /api/bonds/calculate 200 in 15ms :: {"analytics":{"yieldToMaturity":5.787,…
📊 Calculate request received with predefinedCashFlows? true
📊 Number of predefined cash flows: 19
📊 Parsed bond data has predefinedCashFlows? true
🔍 buildBond received bond with predefinedCashFlows: 19
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 13 entries
🔍 Adding 4%, running total: 4%
🔍 Adding 8%, running total: 12%
🔍 Adding 8%, running total: 20%
🔍 Adding 8%, running total: 28%
🔍 Adding 8%, running total: 36%
🔍 Adding 8%, running total: 44%
🔍 Adding 8%, running total: 52%
🔍 Adding 8%, running total: 60%
🔍 Adding 8%, running total: 68%
🔍 Adding 8%, running total: 76%
🔍 Adding 8%, running total: 84%
🔍 Adding 8%, running total: 92%
🔍 Adding 8%, running total: 100%
🔍 Final amortization total: 100% (VALID)
🔄 Using predefined cash flows: 19 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 880,
  settlementDate: '2025-06-14',
  outstandingRatio: 0.88,
  note: 'Using actual outstanding principal after amortization'
}
💰 Cash flow filtering: Total 19 → Future 11 (settlement: 2025-06-14)
📥 Backend received: {
  marketPrice: undefined,
  targetYield: undefined,
  targetSpread: 300,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2030-07-09'
}
🔍 Calculation inputs - Price: undefined, Yield: undefined, Spread: 300
📊 Calculating price from spread: 300 bps
📊 Initial YTM guess: 8.000%
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 880,
  currentOutstanding: 880,
  settlementDate: '2025-06-14',
  outstandingRatio: 1
}
🔄 Z-Spread Calculation:
  - Target Price: 753.7214047845299
  - Cash Flows: 11
  - Z-Spread converged: 318 bps
📊 Calculated average life: 2.57 years
📊 Interpolated Treasury yield: 4.840%
📊 Target yield (Treasury + Spread): 7.840%
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 880,
  currentOutstanding: 880,
  settlementDate: '2025-06-14',
  outstandingRatio: 1
}
🔄 Z-Spread Calculation:
  - Target Price: 756.3736889131536
  - Cash Flows: 11
  - Z-Spread converged: 302 bps
✅ Spread calculation successful - Price: 85.9516
🔍 RAW CALCULATOR RESULT: {
  yields: { ytm: 7.84, ytw: 7.84, current: 0.8329216222542827 },
  risk: {
    modifiedDuration: 2.1987816140163545,
    macaulayDuration: 2.371166092555237,
    effectiveDuration: 2.198781694268865,
    convexity: 8.987751963270775,
    dv01: 0.1663100560507968
  },
  price: {
    clean: 85.9515555583129,
    dirty: 85.9515555583129,
    cleanDollar: 756.3736889131536,
    dirtyDollar: 756.3736889131536,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 2.569846307012632,
    totalCashFlows: 911,
    daysToNextPayment: 25,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 83.3
  },
  spreads: { treasury: 300, zSpread: 301.8798828125 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 85.9515555583129,
  dirty: 85.9515555583129,
  cleanDollar: 756.3736889131536,
  dirtyDollar: 756.3736889131536,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 7.84,
  duration: 2.1987816140163545,
  cleanPrice: 85.9515555583129,
  spread: 300
}
6:22:52 PM [express] POST /api/bonds/calculate 200 in 23ms :: {"analytics":{"yieldToMaturity":7.84,"…
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 284,
    "heapUsed": 112,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 61
}
📊 Calculate request received with predefinedCashFlows? true
📊 Number of predefined cash flows: 19
📊 Parsed bond data has predefinedCashFlows? true
🔍 buildBond received bond with predefinedCashFlows: 19
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 13 entries
🔍 Adding 4%, running total: 4%
🔍 Adding 8%, running total: 12%
🔍 Adding 8%, running total: 20%
🔍 Adding 8%, running total: 28%
🔍 Adding 8%, running total: 36%
🔍 Adding 8%, running total: 44%
🔍 Adding 8%, running total: 52%
🔍 Adding 8%, running total: 60%
🔍 Adding 8%, running total: 68%
🔍 Adding 8%, running total: 76%
🔍 Adding 8%, running total: 84%
🔍 Adding 8%, running total: 92%
🔍 Adding 8%, running total: 100%
🔍 Final amortization total: 100% (VALID)
🔄 Using predefined cash flows: 19 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 880,
  settlementDate: '2025-06-14',
  outstandingRatio: 0.88,
  note: 'Using actual outstanding principal after amortization'
}
💰 Cash flow filtering: Total 19 → Future 11 (settlement: 2025-06-14)
📥 Backend received: {
  marketPrice: undefined,
  targetYield: 11,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2030-07-09'
}
🔍 Calculation inputs - Price: undefined, Yield: 11, Spread: undefined
🎯 YTM → Price mode. Target YTM: 11
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 880,
  currentOutstanding: 880,
  settlementDate: '2025-06-14',
  outstandingRatio: 1
}
🔄 Z-Spread Calculation:
  - Target Price: 707.0316986506846
  - Cash Flows: 11
  - Z-Spread final: 500 bps
🔍 RAW CALCULATOR RESULT: {
  yields: { ytm: 11, ytw: 11, current: 0.8910491583366154 },
  risk: {
    modifiedDuration: 2.0724559347939877,
    macaulayDuration: 2.3004260876213265,
    effectiveDuration: 2.07245600496639,
    convexity: 8.141677986834772,
    dv01: 0.14652920399560856
  },
  price: {
    clean: 80.34451121030507,
    dirty: 80.34451121030507,
    cleanDollar: 707.0316986506846,
    dirtyDollar: 707.0316986506846,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 2.569846307012632,
    totalCashFlows: 911,
    daysToNextPayment: 25,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 83.3
  },
  spreads: { treasury: 616, zSpread: 499.9999999999998 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 80.34451121030507,
  dirty: 80.34451121030507,
  cleanDollar: 707.0316986506846,
  dirtyDollar: 707.0316986506846,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 11,
  duration: 2.0724559347939877,
  cleanPrice: 80.34451121030507,
  spread: 616
}
6:23:01 PM [express] POST /api/bonds/calculate 200 in 12ms :: {"analytics":{"yieldToMaturity":11,"yi…
6:23:02 PM [express] GET /api/bonds/saved 200 in 2ms :: {"bonds":[{"filename":"GD29_ARGENTINA_100pct…
6:23:04 PM [express] GET /api/bonds/saved 304 in 25ms :: {"bonds":[{"filename":"GD29_ARGENTINA_100pc…
6:23:05 PM [express] GET /api/bonds/saved/GD38_ARGENTINA_5pct_20380109.json 200 in 1ms :: {"metadata…
🔍 buildBond received bond with predefinedCashFlows: 34
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 22 entries
🔍 Adding 4.545%, running total: 4.545%
🔍 Adding 4.545%, running total: 9.09%
🔍 Adding 4.545%, running total: 13.635%
🔍 Adding 4.545%, running total: 18.18%
🔍 Adding 4.545%, running total: 22.725%
🔍 Adding 4.545%, running total: 27.270000000000003%
🔍 Adding 4.545%, running total: 31.815000000000005%
🔍 Adding 4.545%, running total: 36.36000000000001%
🔍 Adding 4.545%, running total: 40.90500000000001%
🔍 Adding 4.545%, running total: 45.45000000000001%
🔍 Adding 4.545%, running total: 49.99500000000001%
🔍 Adding 4.545%, running total: 54.54000000000001%
🔍 Adding 4.545%, running total: 59.085000000000015%
🔍 Adding 4.545%, running total: 63.63000000000002%
🔍 Adding 4.545%, running total: 68.17500000000001%
🔍 Adding 4.545%, running total: 72.72000000000001%
🔍 Adding 4.545%, running total: 77.26500000000001%
🔍 Adding 4.545%, running total: 81.81000000000002%
🔍 Adding 4.545%, running total: 86.35500000000002%
🔍 Adding 4.545%, running total: 90.90000000000002%
🔍 Adding 4.545%, running total: 95.44500000000002%
🔍 Adding 4.545%, running total: 99.99000000000002%
🔍 Final amortization total: 99.99000000000002% (VALID)
🔄 Using predefined cash flows: 34 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-14',
  outstandingRatio: 1,
  note: 'No amortization yet - using full face value'
}
💰 Cash flow filtering: Total 34 → Future 26 (settlement: 2025-06-14)
📥 Backend received: {
  marketPrice: 100,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2038-01-09'
}
🔍 Calculation inputs - Price: 100, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 100
🔍 Price input: 100 (100.00% of face value)
🔍 Effective dollar price: $1000 (100% of $1000)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 26,
  price: 100,
  settlementDate: '2025-06-14',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-14',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 1000
  - Cash Flows: 26
  - Total CF Amount: 1387.5
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 1387.5
  - Target Price: 1000
  - Total Return: 1.3875
  - Average Time: 6.49 years
  - Simple: 5.18%, Current Yield: 34.62%, IRR: 5.44%
  - Final Guess: 5.44%
    Iteration 0: yield = 5.442%, error = 0.002908
    Iteration 5: yield = 5.442%, error = 0.000000
  ✅ Newton-Raphson converged: YTM = 5.442%
🔄 Z-Spread Calculation:
  - Target Price: 1000
  - Cash Flows: 26
  - Z-Spread converged: 60 bps
🔍 RAW CALCULATOR RESULT: {
  yields: { ytm: 5.441643280026627, ytw: 5.441643280026627, current: 5 },
  risk: {
    modifiedDuration: 5.57260866131162,
    macaulayDuration: 5.875850146052066,
    effectiveDuration: 5.572609461389937,
    convexity: 46.55506189796572,
    dv01: 0.5572608661311621
  },
  price: {
    clean: 100,
    dirty: 100,
    cleanDollar: 1000,
    dirtyDollar: 1000,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 7.319964900752907,
    totalCashFlows: 1387.5,
    daysToNextPayment: 25,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 25
  },
  spreads: { treasury: 60.16432800266269, zSpread: 60.3271484375 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 100,
  dirty: 100,
  cleanDollar: 1000,
  dirtyDollar: 1000,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 5.441643280026627,
  duration: 5.57260866131162,
  cleanPrice: 100,
  spread: 60.16432800266269
}
6:23:05 PM [express] POST /api/bonds/build 200 in 25ms :: {"bond":{"issuer":"REPUBLIC OF ARGENTINA",…
6:23:05 PM [express] GET /api/bonds/saved 304 in 1ms :: {"bonds":[{"filename":"GD29_ARGENTINA_100pct…
📊 Calculate request received with predefinedCashFlows? true
📊 Number of predefined cash flows: 34
📊 Parsed bond data has predefinedCashFlows? true
🔍 buildBond received bond with predefinedCashFlows: 34
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 22 entries
🔍 Adding 4.545%, running total: 4.545%
🔍 Adding 4.545%, running total: 9.09%
🔍 Adding 4.545%, running total: 13.635%
🔍 Adding 4.545%, running total: 18.18%
🔍 Adding 4.545%, running total: 22.725%
🔍 Adding 4.545%, running total: 27.270000000000003%
🔍 Adding 4.545%, running total: 31.815000000000005%
🔍 Adding 4.545%, running total: 36.36000000000001%
🔍 Adding 4.545%, running total: 40.90500000000001%
🔍 Adding 4.545%, running total: 45.45000000000001%
🔍 Adding 4.545%, running total: 49.99500000000001%
🔍 Adding 4.545%, running total: 54.54000000000001%
🔍 Adding 4.545%, running total: 59.085000000000015%
🔍 Adding 4.545%, running total: 63.63000000000002%
🔍 Adding 4.545%, running total: 68.17500000000001%
🔍 Adding 4.545%, running total: 72.72000000000001%
🔍 Adding 4.545%, running total: 77.26500000000001%
🔍 Adding 4.545%, running total: 81.81000000000002%
🔍 Adding 4.545%, running total: 86.35500000000002%
🔍 Adding 4.545%, running total: 90.90000000000002%
🔍 Adding 4.545%, running total: 95.44500000000002%
🔍 Adding 4.545%, running total: 99.99000000000002%
🔍 Final amortization total: 99.99000000000002% (VALID)
🔄 Using predefined cash flows: 34 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-14',
  outstandingRatio: 1,
  note: 'No amortization yet - using full face value'
}
💰 Cash flow filtering: Total 34 → Future 26 (settlement: 2025-06-14)
📥 Backend received: {
  marketPrice: undefined,
  targetYield: 11,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2038-01-09'
}
🔍 Calculation inputs - Price: undefined, Yield: 11, Spread: undefined
🎯 YTM → Price mode. Target YTM: 11
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-14',
  outstandingRatio: 1
}
🔄 Z-Spread Calculation:
  - Target Price: 750.4103081297939
  - Cash Flows: 26
  - Z-Spread final: 500 bps
🔍 RAW CALCULATOR RESULT: {
  yields: { ytm: 11, ytw: 11, current: 6.663021477491725 },
  risk: {
    modifiedDuration: 4.782412029013187,
    macaulayDuration: 5.308477352204639,
    effectiveDuration: 4.782412592735298,
    convexity: 35.85172291554399,
    dv01: 0.35887712842954184
  },
  price: {
    clean: 75.04103081297939,
    dirty: 75.04103081297939,
    cleanDollar: 750.4103081297939,
    dirtyDollar: 750.4103081297939,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 7.319964900752907,
    totalCashFlows: 1387.5,
    daysToNextPayment: 25,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 25
  },
  spreads: { treasury: 616, zSpread: 499.9999999999998 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 75.04103081297939,
  dirty: 75.04103081297939,
  cleanDollar: 750.4103081297939,
  dirtyDollar: 750.4103081297939,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 11,
  duration: 4.782412029013187,
  cleanPrice: 75.04103081297939,
  spread: 616
}
6:23:09 PM [express] POST /api/bonds/calculate 200 in 26ms :: {"analytics":{"yieldToMaturity":11,"yi…
📊 Calculate request received with predefinedCashFlows? true
📊 Number of predefined cash flows: 34
📊 Parsed bond data has predefinedCashFlows? true
🔍 buildBond received bond with predefinedCashFlows: 34
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 22 entries
🔍 Adding 4.545%, running total: 4.545%
🔍 Adding 4.545%, running total: 9.09%
🔍 Adding 4.545%, running total: 13.635%
🔍 Adding 4.545%, running total: 18.18%
🔍 Adding 4.545%, running total: 22.725%
🔍 Adding 4.545%, running total: 27.270000000000003%
🔍 Adding 4.545%, running total: 31.815000000000005%
🔍 Adding 4.545%, running total: 36.36000000000001%
🔍 Adding 4.545%, running total: 40.90500000000001%
🔍 Adding 4.545%, running total: 45.45000000000001%
🔍 Adding 4.545%, running total: 49.99500000000001%
🔍 Adding 4.545%, running total: 54.54000000000001%
🔍 Adding 4.545%, running total: 59.085000000000015%
🔍 Adding 4.545%, running total: 63.63000000000002%
🔍 Adding 4.545%, running total: 68.17500000000001%
🔍 Adding 4.545%, running total: 72.72000000000001%
🔍 Adding 4.545%, running total: 77.26500000000001%
🔍 Adding 4.545%, running total: 81.81000000000002%
🔍 Adding 4.545%, running total: 86.35500000000002%
🔍 Adding 4.545%, running total: 90.90000000000002%
🔍 Adding 4.545%, running total: 95.44500000000002%
🔍 Adding 4.545%, running total: 99.99000000000002%
🔍 Final amortization total: 99.99000000000002% (VALID)
🔄 Using predefined cash flows: 34 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-14',
  outstandingRatio: 1,
  note: 'No amortization yet - using full face value'
}
💰 Cash flow filtering: Total 34 → Future 26 (settlement: 2025-06-14)
📥 Backend received: {
  marketPrice: undefined,
  targetYield: undefined,
  targetSpread: 300,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2038-01-09'
}
🔍 Calculation inputs - Price: undefined, Yield: undefined, Spread: 300
📊 Calculating price from spread: 300 bps
📊 Initial YTM guess: 8.000%
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-14',
  outstandingRatio: 1
}
🔄 Z-Spread Calculation:
  - Target Price: 871.4242039967297
  - Cash Flows: 26
  - Z-Spread converged: 316 bps
📊 Calculated average life: 7.32 years
📊 Interpolated Treasury yield: 4.840%
📊 Target yield (Treasury + Spread): 7.840%
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-14',
  outstandingRatio: 1
}
🔄 Z-Spread Calculation:
  - Target Price: 878.7088099280064
  - Cash Flows: 26
  - Z-Spread converged: 300 bps
✅ Spread calculation successful - Price: 87.8709
🔍 RAW CALCULATOR RESULT: {
  yields: { ytm: 7.84, ytw: 7.84, current: 5.690167144687733 },
  risk: {
    modifiedDuration: 5.214407266935619,
    macaulayDuration: 5.623216796663372,
    effectiveDuration: 5.214407954374454,
    convexity: 41.56784625820923,
    dv01: 0.4581945604008946
  },
  price: {
    clean: 87.87088099280064,
    dirty: 87.87088099280064,
    cleanDollar: 878.7088099280064,
    dirtyDollar: 878.7088099280064,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 7.319964900752907,
    totalCashFlows: 1387.5,
    daysToNextPayment: 25,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 25
  },
  spreads: { treasury: 300, zSpread: 300.1953125 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 87.87088099280064,
  dirty: 87.87088099280064,
  cleanDollar: 878.7088099280064,
  dirtyDollar: 878.7088099280064,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 7.84,
  duration: 5.214407266935619,
  cleanPrice: 87.87088099280064,
  spread: 300
}
6:23:12 PM [express] POST /api/bonds/calculate 200 in 32ms :: {"analytics":{"yieldToMaturity":7.84,"…
📊 Calculate request received with predefinedCashFlows? false
📊 Number of predefined cash flows: 0
📊 Parsed bond data has predefinedCashFlows? false
🔍 buildBond received bond with predefinedCashFlows: NONE
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 13 entries
🔍 Adding 4%, running total: 4%
🔍 Adding 8%, running total: 12%
🔍 Adding 8%, running total: 20%
🔍 Adding 8%, running total: 28%
🔍 Adding 8%, running total: 36%
🔍 Adding 8%, running total: 44%
🔍 Adding 8%, running total: 52%
🔍 Adding 8%, running total: 60%
🔍 Adding 8%, running total: 68%
🔍 Adding 8%, running total: 76%
🔍 Adding 8%, running total: 84%
🔍 Adding 8%, running total: 92%
🔍 Adding 8%, running total: 100%
🔍 Final amortization total: 100% (VALID)
🔄 Generating cash flows from bond parameters
🔧 generateCashFlows starting for REPUBLIC OF ARGENTINA
📊 Bond: REPUBLIC OF ARGENTINA | Issue: 2020-07-09 | Maturity: 2030-07-09
📊 Coupon: 0.75% | Frequency: 2x/year | Face: $1000
📊 Features: Amortizing=true, Variable=true
📊 Amortization schedule has 13 entries
📊 Coupon rate changes: 1 entries
📅 Using provided firstCouponDate: 2021-01-09
🔍 Payment 1: 2021-01-09 | Days to maturity: 3468 | BySchedule: false | ByProximity: false | Is last: false | Remaining: $1000.00
🔍 Checking amortization for payment 2021-01-09 (year: 2021)
🔍 Amortization schedule: [{"date":"2025-01-09","percent":4},{"date":"2025-07-09","percent":8},{"date":"2026-01-09","percent":8},{"date":"2026-07-09","percent":8},{"date":"2027-01-09","percent":8},{"date":"2027-07-09","percent":8},{"date":"2028-01-09","percent":8},{"date":"2028-07-09","percent":8},{"date":"2029-01-09","percent":8},{"date":"2029-07-09","percent":8},{"date":"2030-01-09","percent":8},{"date":"2030-07-09","percent":8},{"date":"2030-07-09","percent":8}]
🔍 Comparing payment year 2021 with amort year 2025 (2025-01-09)
🔍 Comparing payment year 2021 with amort year 2025 (2025-07-09)
🔍 Comparing payment year 2021 with amort year 2026 (2026-01-09)
🔍 Comparing payment year 2021 with amort year 2026 (2026-07-09)
🔍 Comparing payment year 2021 with amort year 2027 (2027-01-09)
🔍 Comparing payment year 2021 with amort year 2027 (2027-07-09)
🔍 Comparing payment year 2021 with amort year 2028 (2028-01-09)
🔍 Comparing payment year 2021 with amort year 2028 (2028-07-09)
🔍 Comparing payment year 2021 with amort year 2029 (2029-01-09)
🔍 Comparing payment year 2021 with amort year 2029 (2029-07-09)
🔍 Comparing payment year 2021 with amort year 2030 (2030-01-09)
🔍 Comparing payment year 2021 with amort year 2030 (2030-07-09)
🔍 Comparing payment year 2021 with amort year 2030 (2030-07-09)
💰 Payment 1: 2021-01-09 | Coupon: $3.75 | Principal: $0.00 | Total: $3.75 | COUPON
🔍 Payment 2: 2021-07-09 | Days to maturity: 3287 | BySchedule: false | ByProximity: false | Is last: false | Remaining: $1000.00
🔍 Checking amortization for payment 2021-07-09 (year: 2021)
🔍 Amortization schedule: [{"date":"2025-01-09","percent":4},{"date":"2025-07-09","percent":8},{"date":"2026-01-09","percent":8},{"date":"2026-07-09","percent":8},{"date":"2027-01-09","percent":8},{"date":"2027-07-09","percent":8},{"date":"2028-01-09","percent":8},{"date":"2028-07-09","percent":8},{"date":"2029-01-09","percent":8},{"date":"2029-07-09","percent":8},{"date":"2030-01-09","percent":8},{"date":"2030-07-09","percent":8},{"date":"2030-07-09","percent":8}]
🔍 Comparing payment year 2021 with amort year 2025 (2025-01-09)
🔍 Comparing payment year 2021 with amort year 2025 (2025-07-09)
🔍 Comparing payment year 2021 with amort year 2026 (2026-01-09)
🔍 Comparing payment year 2021 with amort year 2026 (2026-07-09)
🔍 Comparing payment year 2021 with amort year 2027 (2027-01-09)
🔍 Comparing payment year 2021 with amort year 2027 (2027-07-09)
🔍 Comparing payment year 2021 with amort year 2028 (2028-01-09)
🔍 Comparing payment year 2021 with amort year 2028 (2028-07-09)
🔍 Comparing payment year 2021 with amort year 2029 (2029-01-09)
🔍 Comparing payment year 2021 with amort year 2029 (2029-07-09)
🔍 Comparing payment year 2021 with amort year 2030 (2030-01-09)
🔍 Comparing payment year 2021 with amort year 2030 (2030-07-09)
🔍 Comparing payment year 2021 with amort year 2030 (2030-07-09)
💰 Payment 2: 2021-07-09 | Coupon: $3.75 | Principal: $0.00 | Total: $3.75 | COUPON
🔍 Payment 3: 2022-01-09 | Days to maturity: 3103 | BySchedule: false | ByProximity: false | Is last: false | Remaining: $1000.00
🔍 Checking amortization for payment 2022-01-09 (year: 2022)
🔍 Amortization schedule: [{"date":"2025-01-09","percent":4},{"date":"2025-07-09","percent":8},{"date":"2026-01-09","percent":8},{"date":"2026-07-09","percent":8},{"date":"2027-01-09","percent":8},{"date":"2027-07-09","percent":8},{"date":"2028-01-09","percent":8},{"date":"2028-07-09","percent":8},{"date":"2029-01-09","percent":8},{"date":"2029-07-09","percent":8},{"date":"2030-01-09","percent":8},{"date":"2030-07-09","percent":8},{"date":"2030-07-09","percent":8}]
🔍 Comparing payment year 2022 with amort year 2025 (2025-01-09)
🔍 Comparing payment year 2022 with amort year 2025 (2025-07-09)
🔍 Comparing payment year 2022 with amort year 2026 (2026-01-09)
🔍 Comparing payment year 2022 with amort year 2026 (2026-07-09)
🔍 Comparing payment year 2022 with amort year 2027 (2027-01-09)
🔍 Comparing payment year 2022 with amort year 2027 (2027-07-09)
🔍 Comparing payment year 2022 with amort year 2028 (2028-01-09)
🔍 Comparing payment year 2022 with amort year 2028 (2028-07-09)
🔍 Comparing payment year 2022 with amort year 2029 (2029-01-09)
🔍 Comparing payment year 2022 with amort year 2029 (2029-07-09)
🔍 Comparing payment year 2022 with amort year 2030 (2030-01-09)
🔍 Comparing payment year 2022 with amort year 2030 (2030-07-09)
🔍 Comparing payment year 2022 with amort year 2030 (2030-07-09)
💰 Payment 3: 2022-01-09 | Coupon: $3.75 | Principal: $0.00 | Total: $3.75 | COUPON
🔍 Payment 4: 2022-07-09 | Days to maturity: 2922 | BySchedule: false | ByProximity: false | Is last: false | Remaining: $1000.00
🔍 Checking amortization for payment 2022-07-09 (year: 2022)
🔍 Amortization schedule: [{"date":"2025-01-09","percent":4},{"date":"2025-07-09","percent":8},{"date":"2026-01-09","percent":8},{"date":"2026-07-09","percent":8},{"date":"2027-01-09","percent":8},{"date":"2027-07-09","percent":8},{"date":"2028-01-09","percent":8},{"date":"2028-07-09","percent":8},{"date":"2029-01-09","percent":8},{"date":"2029-07-09","percent":8},{"date":"2030-01-09","percent":8},{"date":"2030-07-09","percent":8},{"date":"2030-07-09","percent":8}]
🔍 Comparing payment year 2022 with amort year 2025 (2025-01-09)
🔍 Comparing payment year 2022 with amort year 2025 (2025-07-09)
🔍 Comparing payment year 2022 with amort year 2026 (2026-01-09)
🔍 Comparing payment year 2022 with amort year 2026 (2026-07-09)
🔍 Comparing payment year 2022 with amort year 2027 (2027-01-09)
🔍 Comparing payment year 2022 with amort year 2027 (2027-07-09)
🔍 Comparing payment year 2022 with amort year 2028 (2028-01-09)
🔍 Comparing payment year 2022 with amort year 2028 (2028-07-09)
🔍 Comparing payment year 2022 with amort year 2029 (2029-01-09)
🔍 Comparing payment year 2022 with amort year 2029 (2029-07-09)
🔍 Comparing payment year 2022 with amort year 2030 (2030-01-09)
🔍 Comparing payment year 2022 with amort year 2030 (2030-07-09)
🔍 Comparing payment year 2022 with amort year 2030 (2030-07-09)
💰 Payment 4: 2022-07-09 | Coupon: $3.75 | Principal: $0.00 | Total: $3.75 | COUPON
🔍 Payment 5: 2023-01-09 | Days to maturity: 2738 | BySchedule: false | ByProximity: false | Is last: false | Remaining: $1000.00
🔍 Checking amortization for payment 2023-01-09 (year: 2023)
🔍 Amortization schedule: [{"date":"2025-01-09","percent":4},{"date":"2025-07-09","percent":8},{"date":"2026-01-09","percent":8},{"date":"2026-07-09","percent":8},{"date":"2027-01-09","percent":8},{"date":"2027-07-09","percent":8},{"date":"2028-01-09","percent":8},{"date":"2028-07-09","percent":8},{"date":"2029-01-09","percent":8},{"date":"2029-07-09","percent":8},{"date":"2030-01-09","percent":8},{"date":"2030-07-09","percent":8},{"date":"2030-07-09","percent":8}]
🔍 Comparing payment year 2023 with amort year 2025 (2025-01-09)
🔍 Comparing payment year 2023 with amort year 2025 (2025-07-09)
🔍 Comparing payment year 2023 with amort year 2026 (2026-01-09)
🔍 Comparing payment year 2023 with amort year 2026 (2026-07-09)
🔍 Comparing payment year 2023 with amort year 2027 (2027-01-09)
🔍 Comparing payment year 2023 with amort year 2027 (2027-07-09)
🔍 Comparing payment year 2023 with amort year 2028 (2028-01-09)
🔍 Comparing payment year 2023 with amort year 2028 (2028-07-09)
🔍 Comparing payment year 2023 with amort year 2029 (2029-01-09)
🔍 Comparing payment year 2023 with amort year 2029 (2029-07-09)
🔍 Comparing payment year 2023 with amort year 2030 (2030-01-09)
🔍 Comparing payment year 2023 with amort year 2030 (2030-07-09)
🔍 Comparing payment year 2023 with amort year 2030 (2030-07-09)
💰 Payment 5: 2023-01-09 | Coupon: $3.75 | Principal: $0.00 | Total: $3.75 | COUPON
🔍 Payment 6: 2023-07-09 | Days to maturity: 2557 | BySchedule: false | ByProximity: false | Is last: false | Remaining: $1000.00
🔍 Checking amortization for payment 2023-07-09 (year: 2023)
🔍 Amortization schedule: [{"date":"2025-01-09","percent":4},{"date":"2025-07-09","percent":8},{"date":"2026-01-09","percent":8},{"date":"2026-07-09","percent":8},{"date":"2027-01-09","percent":8},{"date":"2027-07-09","percent":8},{"date":"2028-01-09","percent":8},{"date":"2028-07-09","percent":8},{"date":"2029-01-09","percent":8},{"date":"2029-07-09","percent":8},{"date":"2030-01-09","percent":8},{"date":"2030-07-09","percent":8},{"date":"2030-07-09","percent":8}]
🔍 Comparing payment year 2023 with amort year 2025 (2025-01-09)
🔍 Comparing payment year 2023 with amort year 2025 (2025-07-09)
🔍 Comparing payment year 2023 with amort year 2026 (2026-01-09)
🔍 Comparing payment year 2023 with amort year 2026 (2026-07-09)
🔍 Comparing payment year 2023 with amort year 2027 (2027-01-09)
🔍 Comparing payment year 2023 with amort year 2027 (2027-07-09)
🔍 Comparing payment year 2023 with amort year 2028 (2028-01-09)
🔍 Comparing payment year 2023 with amort year 2028 (2028-07-09)
🔍 Comparing payment year 2023 with amort year 2029 (2029-01-09)
🔍 Comparing payment year 2023 with amort year 2029 (2029-07-09)
🔍 Comparing payment year 2023 with amort year 2030 (2030-01-09)
🔍 Comparing payment year 2023 with amort year 2030 (2030-07-09)
🔍 Comparing payment year 2023 with amort year 2030 (2030-07-09)
💰 Payment 6: 2023-07-09 | Coupon: $3.75 | Principal: $0.00 | Total: $3.75 | COUPON
🔍 Payment 7: 2024-01-09 | Days to maturity: 2373 | BySchedule: false | ByProximity: false | Is last: false | Remaining: $1000.00
🔍 Checking amortization for payment 2024-01-09 (year: 2024)
🔍 Amortization schedule: [{"date":"2025-01-09","percent":4},{"date":"2025-07-09","percent":8},{"date":"2026-01-09","percent":8},{"date":"2026-07-09","percent":8},{"date":"2027-01-09","percent":8},{"date":"2027-07-09","percent":8},{"date":"2028-01-09","percent":8},{"date":"2028-07-09","percent":8},{"date":"2029-01-09","percent":8},{"date":"2029-07-09","percent":8},{"date":"2030-01-09","percent":8},{"date":"2030-07-09","percent":8},{"date":"2030-07-09","percent":8}]
🔍 Comparing payment year 2024 with amort year 2025 (2025-01-09)
🔍 Comparing payment year 2024 with amort year 2025 (2025-07-09)
🔍 Comparing payment year 2024 with amort year 2026 (2026-01-09)
🔍 Comparing payment year 2024 with amort year 2026 (2026-07-09)
🔍 Comparing payment year 2024 with amort year 2027 (2027-01-09)
🔍 Comparing payment year 2024 with amort year 2027 (2027-07-09)
🔍 Comparing payment year 2024 with amort year 2028 (2028-01-09)
🔍 Comparing payment year 2024 with amort year 2028 (2028-07-09)
🔍 Comparing payment year 2024 with amort year 2029 (2029-01-09)
🔍 Comparing payment year 2024 with amort year 2029 (2029-07-09)
🔍 Comparing payment year 2024 with amort year 2030 (2030-01-09)
🔍 Comparing payment year 2024 with amort year 2030 (2030-07-09)
🔍 Comparing payment year 2024 with amort year 2030 (2030-07-09)
💰 Payment 7: 2024-01-09 | Coupon: $3.75 | Principal: $0.00 | Total: $3.75 | COUPON
🔍 Payment 8: 2024-07-09 | Days to maturity: 2191 | BySchedule: false | ByProximity: false | Is last: false | Remaining: $1000.00
🔍 Checking amortization for payment 2024-07-09 (year: 2024)
🔍 Amortization schedule: [{"date":"2025-01-09","percent":4},{"date":"2025-07-09","percent":8},{"date":"2026-01-09","percent":8},{"date":"2026-07-09","percent":8},{"date":"2027-01-09","percent":8},{"date":"2027-07-09","percent":8},{"date":"2028-01-09","percent":8},{"date":"2028-07-09","percent":8},{"date":"2029-01-09","percent":8},{"date":"2029-07-09","percent":8},{"date":"2030-01-09","percent":8},{"date":"2030-07-09","percent":8},{"date":"2030-07-09","percent":8}]
🔍 Comparing payment year 2024 with amort year 2025 (2025-01-09)
🔍 Comparing payment year 2024 with amort year 2025 (2025-07-09)
🔍 Comparing payment year 2024 with amort year 2026 (2026-01-09)
🔍 Comparing payment year 2024 with amort year 2026 (2026-07-09)
🔍 Comparing payment year 2024 with amort year 2027 (2027-01-09)
🔍 Comparing payment year 2024 with amort year 2027 (2027-07-09)
🔍 Comparing payment year 2024 with amort year 2028 (2028-01-09)
🔍 Comparing payment year 2024 with amort year 2028 (2028-07-09)
🔍 Comparing payment year 2024 with amort year 2029 (2029-01-09)
🔍 Comparing payment year 2024 with amort year 2029 (2029-07-09)
🔍 Comparing payment year 2024 with amort year 2030 (2030-01-09)
🔍 Comparing payment year 2024 with amort year 2030 (2030-07-09)
🔍 Comparing payment year 2024 with amort year 2030 (2030-07-09)
💰 Payment 8: 2024-07-09 | Coupon: $3.75 | Principal: $0.00 | Total: $3.75 | COUPON
🔍 Payment 9: 2025-01-09 | Days to maturity: 2007 | BySchedule: false | ByProximity: false | Is last: false | Remaining: $1000.00
📊 Coupon rate changed to 6.3% on 2025-01-09
💰 AMORTIZATION: Adding principal payment of $40.00
💰 Payment 9: 2025-01-09 | Coupon: $31.50 | Principal: $40.00 | Total: $71.50 | AMORTIZATION
🔍 Payment 10: 2025-07-09 | Days to maturity: 1826 | BySchedule: false | ByProximity: false | Is last: false | Remaining: $960.00
💰 AMORTIZATION: Adding principal payment of $80.00
💰 Payment 10: 2025-07-09 | Coupon: $30.24 | Principal: $80.00 | Total: $110.24 | AMORTIZATION
🔍 Payment 11: 2026-01-09 | Days to maturity: 1642 | BySchedule: false | ByProximity: false | Is last: false | Remaining: $880.00
💰 AMORTIZATION: Adding principal payment of $80.00
💰 Payment 11: 2026-01-09 | Coupon: $27.72 | Principal: $80.00 | Total: $107.72 | AMORTIZATION
🔍 Payment 12: 2026-07-09 | Days to maturity: 1461 | BySchedule: false | ByProximity: false | Is last: false | Remaining: $800.00
💰 AMORTIZATION: Adding principal payment of $80.00
💰 Payment 12: 2026-07-09 | Coupon: $25.20 | Principal: $80.00 | Total: $105.20 | AMORTIZATION
🔍 Payment 13: 2027-01-09 | Days to maturity: 1277 | BySchedule: false | ByProximity: false | Is last: false | Remaining: $720.00
💰 AMORTIZATION: Adding principal payment of $80.00
💰 Payment 13: 2027-01-09 | Coupon: $22.68 | Principal: $80.00 | Total: $102.68 | AMORTIZATION
🔍 Payment 14: 2027-07-09 | Days to maturity: 1096 | BySchedule: false | ByProximity: false | Is last: false | Remaining: $640.00
💰 AMORTIZATION: Adding principal payment of $80.00
💰 Payment 14: 2027-07-09 | Coupon: $20.16 | Principal: $80.00 | Total: $100.16 | AMORTIZATION
🔍 Payment 15: 2028-01-09 | Days to maturity: 912 | BySchedule: false | ByProximity: false | Is last: false | Remaining: $560.00
💰 AMORTIZATION: Adding principal payment of $80.00
💰 Payment 15: 2028-01-09 | Coupon: $17.64 | Principal: $80.00 | Total: $97.64 | AMORTIZATION
🔍 Payment 16: 2028-07-09 | Days to maturity: 730 | BySchedule: false | ByProximity: false | Is last: false | Remaining: $480.00
💰 AMORTIZATION: Adding principal payment of $80.00
💰 Payment 16: 2028-07-09 | Coupon: $15.12 | Principal: $80.00 | Total: $95.12 | AMORTIZATION
🔍 Payment 17: 2029-01-09 | Days to maturity: 546 | BySchedule: false | ByProximity: false | Is last: false | Remaining: $400.00
💰 AMORTIZATION: Adding principal payment of $80.00
💰 Payment 17: 2029-01-09 | Coupon: $12.60 | Principal: $80.00 | Total: $92.60 | AMORTIZATION
🔍 Payment 18: 2029-07-09 | Days to maturity: 365 | BySchedule: false | ByProximity: false | Is last: false | Remaining: $320.00
💰 AMORTIZATION: Adding principal payment of $80.00
💰 Payment 18: 2029-07-09 | Coupon: $10.08 | Principal: $80.00 | Total: $90.08 | AMORTIZATION
🔍 Payment 19: 2030-01-09 | Days to maturity: 181 | BySchedule: false | ByProximity: true | Is last: true | Remaining: $240.00
🎯 FINAL PAYMENT: Adding principal payment of $240.00 at maturity
💰 Payment 19: 2030-07-09 | Coupon: $7.56 | Principal: $240.00 | Total: $247.56 | MATURITY
🏁 Loop terminating: isLastPayment = true
🏁 Cash flow generation completed. Total payments: 19, Remaining principal: $0.00
✅ Generated 19 cash flows for REPUBLIC OF ARGENTINA
🔄 Cash flow generation result: 19 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 960,
  settlementDate: '2025-06-14',
  outstandingRatio: 0.96,
  note: 'Using actual outstanding principal after amortization'
}
💰 Cash flow filtering: Total 19 → Future 10 (settlement: 2025-06-14)
📥 Backend received: {
  marketPrice: 80,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2030-07-09'
}
🔍 Calculation inputs - Price: 80, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 80
🔍 Price input: 80 (80.00% of outstanding principal)
🔍 Effective dollar price: $768 (80% of $960)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 10,
  price: 80,
  settlementDate: '2025-06-14',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 960,
  currentOutstanding: 960,
  settlementDate: '2025-06-14',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 768
  - Cash Flows: 10
  - Total CF Amount: 1149
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 1149
  - Target Price: 768
  - Total Return: 1.4961
  - Average Time: 2.65 years
  - Simple: 16.42%, Current Yield: 69.87%, IRR: 18.19%
  - Final Guess: 18.19%
    Iteration 0: yield = 18.189%, error = 0.000196
    Iteration 5: yield = 18.189%, error = 0.000000
  ✅ Newton-Raphson converged: YTM = 18.189%
🔄 Z-Spread Calculation:
  - Target Price: 768
  - Cash Flows: 10
  - Z-Spread final: 500 bps
🔍 RAW CALCULATOR RESULT: {
  yields: {
    ytm: 18.1890406005609,
    ytw: 18.1890406005609,
    current: 7.546874999999999
  },
  risk: {
    modifiedDuration: 1.841963434484388,
    macaulayDuration: 2.1769989114302395,
    effectiveDuration: 1.8419634916627805,
    convexity: 6.889713243171631,
    dv01: 0.14146279176840101
  },
  price: {
    clean: 80,
    dirty: 80,
    cleanDollar: 768,
    dirtyDollar: 768,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 2.8193018480492813,
    totalCashFlows: 1149,
    daysToNextPayment: 25,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 110.24
  },
  spreads: { treasury: 1334.9040600560902, zSpread: 499.9999999999998 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 80,
  dirty: 80,
  cleanDollar: 768,
  dirtyDollar: 768,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 18.1890406005609,
  duration: 1.841963434484388,
  cleanPrice: 80,
  spread: 1334.9040600560902
}
6:23:36 PM [express] POST /api/bonds/calculate 200 in 16ms :: {"analytics":{"yieldToMaturity":18.189…
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 284,
    "heapUsed": 114,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 121
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 284,
    "heapUsed": 114,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 181
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 114,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 241
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 114,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 301
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 284,
    "heapUsed": 114,
    "heapTotal": 119,
    "external": 11
  },
  "uptime": 361
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 114,
    "heapTotal": 119,
    "external": 11
  },
  "uptime": 421
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 284,
    "heapUsed": 114,
    "heapTotal": 119,
    "external": 11
  },
  "uptime": 481
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 284,
    "heapUsed": 114,
    "heapTotal": 119,
    "external": 11
  },
  "uptime": 541
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 283,
    "heapUsed": 113,
    "heapTotal": 119,
    "external": 11
  },
  "uptime": 601
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 283,
    "heapUsed": 114,
    "heapTotal": 119,
    "external": 11
  },
  "uptime": 661
}
6:33:27 PM [express] GET /api/bonds/saved 304 in 20ms :: {"bonds":[{"filename":"GD29_ARGENTINA_100pc…
6:33:27 PM [express] GET /api/bonds/saved/GD38_ARGENTINA_5pct_20380109.json 304 in 2ms :: {"metadata…
🔍 buildBond received bond with predefinedCashFlows: 34
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 22 entries
🔍 Adding 4.545%, running total: 4.545%
🔍 Adding 4.545%, running total: 9.09%
🔍 Adding 4.545%, running total: 13.635%
🔍 Adding 4.545%, running total: 18.18%
🔍 Adding 4.545%, running total: 22.725%
🔍 Adding 4.545%, running total: 27.270000000000003%
🔍 Adding 4.545%, running total: 31.815000000000005%
🔍 Adding 4.545%, running total: 36.36000000000001%
🔍 Adding 4.545%, running total: 40.90500000000001%
🔍 Adding 4.545%, running total: 45.45000000000001%
🔍 Adding 4.545%, running total: 49.99500000000001%
🔍 Adding 4.545%, running total: 54.54000000000001%
🔍 Adding 4.545%, running total: 59.085000000000015%
🔍 Adding 4.545%, running total: 63.63000000000002%
🔍 Adding 4.545%, running total: 68.17500000000001%
🔍 Adding 4.545%, running total: 72.72000000000001%
🔍 Adding 4.545%, running total: 77.26500000000001%
🔍 Adding 4.545%, running total: 81.81000000000002%
🔍 Adding 4.545%, running total: 86.35500000000002%
🔍 Adding 4.545%, running total: 90.90000000000002%
🔍 Adding 4.545%, running total: 95.44500000000002%
🔍 Adding 4.545%, running total: 99.99000000000002%
🔍 Final amortization total: 99.99000000000002% (VALID)
🔄 Using predefined cash flows: 34 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-14',
  outstandingRatio: 1,
  note: 'No amortization yet - using full face value'
}
💰 Cash flow filtering: Total 34 → Future 26 (settlement: 2025-06-14)
📥 Backend received: {
  marketPrice: 100,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2038-01-09'
}
🔍 Calculation inputs - Price: 100, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 100
🔍 Price input: 100 (100.00% of face value)
🔍 Effective dollar price: $1000 (100% of $1000)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 26,
  price: 100,
  settlementDate: '2025-06-14',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-14',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 1000
  - Cash Flows: 26
  - Total CF Amount: 1387.5
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 1387.5
  - Target Price: 1000
  - Total Return: 1.3875
  - Average Time: 6.49 years
  - Simple: 5.18%, Current Yield: 34.62%, IRR: 5.44%
  - Final Guess: 5.44%
    Iteration 0: yield = 5.442%, error = 0.002908
    Iteration 5: yield = 5.442%, error = 0.000000
  ✅ Newton-Raphson converged: YTM = 5.442%
🔄 Z-Spread Calculation:
  - Target Price: 1000
  - Cash Flows: 26
  - Z-Spread converged: 60 bps
🔍 RAW CALCULATOR RESULT: {
  yields: { ytm: 5.441643280026627, ytw: 5.441643280026627, current: 5 },
  risk: {
    modifiedDuration: 5.57260866131162,
    macaulayDuration: 5.875850146052066,
    effectiveDuration: 5.572609461389937,
    convexity: 46.55506189796572,
    dv01: 0.5572608661311621
  },
  price: {
    clean: 100,
    dirty: 100,
    cleanDollar: 1000,
    dirtyDollar: 1000,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 7.319964900752907,
    totalCashFlows: 1387.5,
    daysToNextPayment: 25,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 25
  },
  spreads: { treasury: 60.16432800266269, zSpread: 60.3271484375 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 100,
  dirty: 100,
  cleanDollar: 1000,
  dirtyDollar: 1000,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 5.441643280026627,
  duration: 5.57260866131162,
  cleanPrice: 100,
  spread: 60.16432800266269
}
6:33:27 PM [express] POST /api/bonds/build 200 in 29ms :: {"bond":{"issuer":"REPUBLIC OF ARGENTINA",…
6:33:27 PM [express] GET /api/bonds/saved 304 in 1ms :: {"bonds":[{"filename":"GD29_ARGENTINA_100pct…
📊 Calculate request received with predefinedCashFlows? true
📊 Number of predefined cash flows: 34
📊 Parsed bond data has predefinedCashFlows? true
🔍 buildBond received bond with predefinedCashFlows: 34
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 22 entries
🔍 Adding 4.545%, running total: 4.545%
🔍 Adding 4.545%, running total: 9.09%
🔍 Adding 4.545%, running total: 13.635%
🔍 Adding 4.545%, running total: 18.18%
🔍 Adding 4.545%, running total: 22.725%
🔍 Adding 4.545%, running total: 27.270000000000003%
🔍 Adding 4.545%, running total: 31.815000000000005%
🔍 Adding 4.545%, running total: 36.36000000000001%
🔍 Adding 4.545%, running total: 40.90500000000001%
🔍 Adding 4.545%, running total: 45.45000000000001%
🔍 Adding 4.545%, running total: 49.99500000000001%
🔍 Adding 4.545%, running total: 54.54000000000001%
🔍 Adding 4.545%, running total: 59.085000000000015%
🔍 Adding 4.545%, running total: 63.63000000000002%
🔍 Adding 4.545%, running total: 68.17500000000001%
🔍 Adding 4.545%, running total: 72.72000000000001%
🔍 Adding 4.545%, running total: 77.26500000000001%
🔍 Adding 4.545%, running total: 81.81000000000002%
🔍 Adding 4.545%, running total: 86.35500000000002%
🔍 Adding 4.545%, running total: 90.90000000000002%
🔍 Adding 4.545%, running total: 95.44500000000002%
🔍 Adding 4.545%, running total: 99.99000000000002%
🔍 Final amortization total: 99.99000000000002% (VALID)
🔄 Using predefined cash flows: 34 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-14',
  outstandingRatio: 1,
  note: 'No amortization yet - using full face value'
}
💰 Cash flow filtering: Total 34 → Future 26 (settlement: 2025-06-14)
📥 Backend received: {
  marketPrice: 100,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2038-01-09'
}
🔍 Calculation inputs - Price: 100, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 100
🔍 Price input: 100 (100.00% of face value)
🔍 Effective dollar price: $1000 (100% of $1000)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 26,
  price: 100,
  settlementDate: '2025-06-14',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-14',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 1000
  - Cash Flows: 26
  - Total CF Amount: 1387.5
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 1387.5
  - Target Price: 1000
  - Total Return: 1.3875
  - Average Time: 6.49 years
  - Simple: 5.18%, Current Yield: 34.62%, IRR: 5.44%
  - Final Guess: 5.44%
    Iteration 0: yield = 5.442%, error = 0.002908
    Iteration 5: yield = 5.442%, error = 0.000000
  ✅ Newton-Raphson converged: YTM = 5.442%
🔄 Z-Spread Calculation:
  - Target Price: 1000
  - Cash Flows: 26
  - Z-Spread converged: 60 bps
🔍 RAW CALCULATOR RESULT: {
  yields: { ytm: 5.441643280026627, ytw: 5.441643280026627, current: 5 },
  risk: {
    modifiedDuration: 5.57260866131162,
    macaulayDuration: 5.875850146052066,
    effectiveDuration: 5.572609461389937,
    convexity: 46.55506189796572,
    dv01: 0.5572608661311621
  },
  price: {
    clean: 100,
    dirty: 100,
    cleanDollar: 1000,
    dirtyDollar: 1000,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 7.319964900752907,
    totalCashFlows: 1387.5,
    daysToNextPayment: 25,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 25
  },
  spreads: { treasury: 60.16432800266269, zSpread: 60.3271484375 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 100,
  dirty: 100,
  cleanDollar: 1000,
  dirtyDollar: 1000,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 5.441643280026627,
  duration: 5.57260866131162,
  cleanPrice: 100,
  spread: 60.16432800266269
}
6:33:28 PM [express] POST /api/bonds/calculate 200 in 41ms :: {"analytics":{"yieldToMaturity":5.4416…
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 288,
    "heapUsed": 117,
    "heapTotal": 123,
    "external": 11
  },
  "uptime": 721
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 288,
    "heapUsed": 117,
    "heapTotal": 123,
    "external": 11
  },
  "uptime": 1371
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 288,
    "heapUsed": 117,
    "heapTotal": 123,
    "external": 11
  },
  "uptime": 2412
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 2472
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 115,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 2532
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 2592
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 2652
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 2712
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 2772
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 287,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 2832
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 2892
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 2952
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 115,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 3012
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 115,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 3072
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 3132
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 3192
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 3252
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 3312
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 3372
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 3432
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 3492
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 3552
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 3612
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 3672
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 3732
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 3792
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 3852
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 3912
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 3972
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 4032
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 4092
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 4152
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 4212
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 4272
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 120,
    "external": 11
  },
  "uptime": 4332
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 4392
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 4452
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 4512
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 4572
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 4632
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 4692
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 4752
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 4812
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 4872
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 4932
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 4992
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 5052
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 5112
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 5172
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 5232
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 5292
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 5352
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 5412
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 5472
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 5532
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 5592
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 5652
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 5712
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 5772
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 5832
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 5892
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 5952
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 6012
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 6933
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 6993
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 7185
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 7638
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 8670
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 8730
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 8790
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 8850
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 8910
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 8970
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 9030
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 9090
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 9150
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 9210
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 9270
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 9330
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 9390
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 9450
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 9510
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 9570
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 9630
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 9690
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 9750
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 9810
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 9870
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 9930
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 9990
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 10050
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 10110
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 10170
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 10230
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 10290
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 10350
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 10410
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 10470
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 10530
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 10590
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 10650
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 10710
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 10770
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 10830
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 10890
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 10950
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 11010
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 11070
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 11130
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 11190
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 11250
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 11310
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 11370
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 11430
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 11490
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 11550
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 11610
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 11670
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 11730
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 11790
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 11850
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 11910
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 11970
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 12030
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 12090
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 12150
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 12210
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 12270
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 12370
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 12624
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 13083
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 13143
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 13313
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 13373
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 14325
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 14385
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 14899
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 14959
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 15896
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 15956
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 16016
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 16076
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 16136
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 16196
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 16256
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 16316
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 16376
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 16436
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 16496
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 16556
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 16616
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 16676
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 16736
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 16796
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 16856
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 16916
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 16976
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 17036
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 17096
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 17156
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 17216
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 17276
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 17336
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 17396
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 17456
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 17516
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 17576
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 17636
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 17696
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 17756
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 17816
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 17876
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 17936
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 17996
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 18056
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 18116
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 18176
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 18236
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 18296
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 18356
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 18416
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 18476
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 18536
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 18596
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 18656
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 18716
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 18776
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 18836
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 18896
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 18956
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 284,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 19016
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 19076
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 19136
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 19196
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 19256
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 19316
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 19376
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 19436
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 19496
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 19578
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 19638
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 20470
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 20530
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 20711
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 20771
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 21257
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 21317
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 21693
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 21833
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 22160
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 22220
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 22280
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 22340
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 22400
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 22460
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 22520
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 22580
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 22640
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 22700
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 22760
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 22820
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 22880
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 22940
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 23000
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 23060
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 23120
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 23180
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 23240
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 23300
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 23360
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 23420
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 23480
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 23540
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 23600
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 23660
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 23720
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 23780
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 23840
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 23900
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 23960
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 24020
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 24080
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 24140
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 24200
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 24260
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 24320
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 24380
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 24440
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 24500
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 24560
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 24620
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 24680
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 24740
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 24800
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 24860
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 24920
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 24980
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 25040
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 25100
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 25160
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 25220
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 25280
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 25340
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 25400
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 25460
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 25520
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 25580
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 25640
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 25700
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 25760
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 25836
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 26360
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 26420
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 26480
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 26540
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 26600
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 26660
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 26720
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 26780
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 26840
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 26900
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 26960
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 27020
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 27080
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 27140
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 27200
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 27260
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 27320
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 27380
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 27440
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 27500
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 27560
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 27620
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 27680
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 27740
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 27800
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 27860
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 27920
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 27980
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 28040
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 28100
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 28160
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 28220
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 28280
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 28340
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 28400
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 28460
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 28520
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 28580
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 28640
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 28700
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 28760
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 28820
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 28880
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 28940
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 29000
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 29060
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 29120
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 29180
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 29240
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 29300
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 29360
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 29420
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 29480
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 29540
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 29600
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 29660
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 29720
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 29780
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 29840
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 29900
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 29960
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 30294
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 31215
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 31685
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 31745
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 31805
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 31865
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 32253
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 32313
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 33229
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 33289
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 33949
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 34009
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 34069
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 34129
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 34189
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 34249
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 35303
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 35363
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 35423
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 35483
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 35543
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 35603
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 35663
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 35723
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 35783
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 35843
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 35903
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 35963
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 36023
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 36966
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 37344
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 37404
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 37464
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 37524
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 37584
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 37644
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 37704
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 37764
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 37824
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 37884
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 37944
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 38004
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 38064
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 38124
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 38184
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 38244
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 38304
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 38364
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 38424
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 38484
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 38544
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 38604
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 38664
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 38724
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 38784
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 38844
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 38904
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 38964
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 39024
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 39084
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 39144
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 39204
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 39264
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 39324
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 39384
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 39444
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 39504
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 39564
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 39624
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 39684
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 39744
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 39804
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 39864
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 39924
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 39984
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 40044
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 40104
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 40164
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 40224
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 40284
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 40344
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 40404
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 40464
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 40524
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 40584
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 40644
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 40704
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 40764
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 40824
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 40884
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 40944
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 41004
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 41064
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 41124
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 41184
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 41244
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 41304
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 42245
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 42305
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 42365
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 42425
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 42485
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 42545
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 42605
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 42665
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 42725
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 42785
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 42845
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 42905
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 42965
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 43025
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 43085
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 43145
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 43205
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 43265
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 43325
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 43385
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 43445
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 43505
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 43565
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 43625
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 43685
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 43745
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 43805
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 43865
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 43925
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 43985
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 44045
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 44105
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 44165
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 44225
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 44285
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 44345
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 44405
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 44465
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 44525
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 44585
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 44645
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 44705
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 44765
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 44825
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 44885
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 44945
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 45005
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 45065
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 45125
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 45185
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 45245
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 45305
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 45365
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 45425
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 45485
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 45545
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 45605
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 45665
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 45725
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 45785
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 45845
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 46800
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 46860
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 46920
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 46980
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 47040
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 47100
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 47160
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 48088
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 48148
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 48208
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 48268
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 48328
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 48388
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 48448
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 48508
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 48568
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 48628
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 48688
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 48748
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 48808
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 48868
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 48928
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 48988
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 49048
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 49108
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 49168
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 49228
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 49288
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 49348
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 49408
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 49468
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 49528
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 49588
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 49648
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 49708
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 49768
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 49828
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 49888
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 49948
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 50008
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 50068
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 50128
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 50188
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 50248
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 50308
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 50368
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 50428
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 50488
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 50548
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 50608
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 50668
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 50728
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 50788
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 50848
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 50908
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 50968
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 51028
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 51088
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 51148
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 51208
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 51268
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 51328
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 51388
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 51448
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 51508
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 51568
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 51628
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 51688
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 51748
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 51899
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 51959
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 52019
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 52079
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 52139
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 52199
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 52259
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 52319
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 52379
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 52439
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 52499
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 52559
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 52619
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 52679
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 52739
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 52799
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 52859
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 52919
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 52979
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 53039
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 53099
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 53159
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 53219
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 53279
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 53339
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 53399
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 53459
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 53519
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 53579
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 53639
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 53699
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 53759
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 53819
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 53879
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 53939
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 53999
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 54059
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 54119
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 54179
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 54239
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 54299
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 54359
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 54419
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 54479
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 54539
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 54599
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 54659
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 54719
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 54779
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 54839
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 54899
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 54959
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 55019
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 55079
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 55139
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 55199
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 55259
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 55319
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 55379
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 55439
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 55499
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 55559
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 55619
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 55679
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 55739
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 55799
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 55859
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 55919
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 55979
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 56039
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 56099
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 56159
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 56219
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 56279
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 56339
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 56399
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 56459
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 56519
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 56579
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 56639
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 56699
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 56759
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 56819
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 56879
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 56939
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 56999
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 57059
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 57119
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 57179
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 57239
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 57299
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 57359
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 57419
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 57479
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 57539
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 57599
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 57659
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 57719
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 57779
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 57839
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 57899
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 57959
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 58019
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 58079
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 58139
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 58199
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 58259
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 58319
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 58379
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 58439
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 58499
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 58559
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 58619
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 58679
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 58739
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 58799
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 58859
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 58919
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 58979
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 59039
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 59099
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 59159
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 59219
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 59279
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 59339
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 59399
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 59459
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 59519
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 59579
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 115,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 59639
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 285,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 59699
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 286,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 59759
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 49,
    "heapUsed": 116,
    "heapTotal": 121,
    "external": 11
  },
  "uptime": 59819
}
10:59:57 AM [vite] hmr update /src/pages/bond-calculator.tsx, /src/index.css?v=ml9r0luq60-9MZWIc3OQV
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 106,
    "heapUsed": 117,
    "heapTotal": 123,
    "external": 11
  },
  "uptime": 59879
}
10:59:57 AM [express] GET /api/bonds/saved 304 in 2ms :: {"bonds":[{"filename":"GD29_ARGENTINA_100pct…
10:59:57 AM [express] GET /api/bonds/saved/GD38_ARGENTINA_5pct_20380109.json 304 in 0ms :: {"metadata…
🔍 buildBond received bond with predefinedCashFlows: 34
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 22 entries
🔍 Adding 4.545%, running total: 4.545%
🔍 Adding 4.545%, running total: 9.09%
🔍 Adding 4.545%, running total: 13.635%
🔍 Adding 4.545%, running total: 18.18%
🔍 Adding 4.545%, running total: 22.725%
🔍 Adding 4.545%, running total: 27.270000000000003%
🔍 Adding 4.545%, running total: 31.815000000000005%
🔍 Adding 4.545%, running total: 36.36000000000001%
🔍 Adding 4.545%, running total: 40.90500000000001%
🔍 Adding 4.545%, running total: 45.45000000000001%
🔍 Adding 4.545%, running total: 49.99500000000001%
🔍 Adding 4.545%, running total: 54.54000000000001%
🔍 Adding 4.545%, running total: 59.085000000000015%
🔍 Adding 4.545%, running total: 63.63000000000002%
🔍 Adding 4.545%, running total: 68.17500000000001%
🔍 Adding 4.545%, running total: 72.72000000000001%
🔍 Adding 4.545%, running total: 77.26500000000001%
🔍 Adding 4.545%, running total: 81.81000000000002%
🔍 Adding 4.545%, running total: 86.35500000000002%
🔍 Adding 4.545%, running total: 90.90000000000002%
🔍 Adding 4.545%, running total: 95.44500000000002%
🔍 Adding 4.545%, running total: 99.99000000000002%
🔍 Final amortization total: 99.99000000000002% (VALID)
🔄 Using predefined cash flows: 34 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-15',
  outstandingRatio: 1,
  note: 'No amortization yet - using full face value'
}
💰 Cash flow filtering: Total 34 → Future 26 (settlement: 2025-06-15)
📥 Backend received: {
  marketPrice: 100,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2038-01-09'
}
🔍 Calculation inputs - Price: 100, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 100
🔍 Price input: 100 (100.00% of face value)
🔍 Effective dollar price: $1000 (100% of $1000)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 26,
  price: 100,
  settlementDate: '2025-06-15',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-15',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 1000
  - Cash Flows: 26
  - Total CF Amount: 1387.5
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 1387.5
  - Target Price: 1000
  - Total Return: 1.3875
  - Average Time: 6.49 years
  - Simple: 5.18%, Current Yield: 34.64%, IRR: 5.44%
  - Final Guess: 5.44%
    Iteration 0: yield = 5.444%, error = 0.002888
    Iteration 5: yield = 5.444%, error = 0.000000
  ✅ Newton-Raphson converged: YTM = 5.444%
🔄 Z-Spread Calculation:
  - Target Price: 1000
  - Cash Flows: 26
  - Z-Spread converged: 61 bps
🔍 RAW CALCULATOR RESULT: {
  yields: { ytm: 5.444247889130587, ytw: 5.444247889130587, current: 5 },
  risk: {
    modifiedDuration: 5.569608443259937,
    macaulayDuration: 5.872831733364954,
    effectiveDuration: 5.569609242525908,
    convexity: 46.51792409336783,
    dv01: 0.5569608443259938
  },
  price: {
    clean: 100,
    dirty: 100,
    cleanDollar: 1000,
    dirtyDollar: 1000,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 7.3172270499657746,
    totalCashFlows: 1387.5,
    daysToNextPayment: 24,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 25
  },
  spreads: { treasury: 60.42478891305869, zSpread: 60.58349609374999 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 100,
  dirty: 100,
  cleanDollar: 1000,
  dirtyDollar: 1000,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 5.444247889130587,
  duration: 5.569608443259937,
  cleanPrice: 100,
  spread: 60.42478891305869
}
10:59:57 AM [express] POST /api/bonds/build 200 in 24ms :: {"bond":{"issuer":"REPUBLIC OF ARGENTINA",…
10:59:57 AM [express] GET /api/bonds/saved 304 in 1ms :: {"bonds":[{"filename":"GD29_ARGENTINA_100pct…
10:59:57 AM [vite] hmr update /src/pages/bond-calculator.tsx, /src/index.css?v=ml9r0luq60-9MZWIc3OQV
10:59:58 AM [express] GET /api/bonds/saved 304 in 2ms :: {"bonds":[{"filename":"GD29_ARGENTINA_100pct…
10:59:58 AM [express] GET /api/bonds/saved/GD38_ARGENTINA_5pct_20380109.json 304 in 0ms :: {"metadata…
🔍 buildBond received bond with predefinedCashFlows: 34
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 22 entries
🔍 Adding 4.545%, running total: 4.545%
🔍 Adding 4.545%, running total: 9.09%
🔍 Adding 4.545%, running total: 13.635%
🔍 Adding 4.545%, running total: 18.18%
🔍 Adding 4.545%, running total: 22.725%
🔍 Adding 4.545%, running total: 27.270000000000003%
🔍 Adding 4.545%, running total: 31.815000000000005%
🔍 Adding 4.545%, running total: 36.36000000000001%
🔍 Adding 4.545%, running total: 40.90500000000001%
🔍 Adding 4.545%, running total: 45.45000000000001%
🔍 Adding 4.545%, running total: 49.99500000000001%
🔍 Adding 4.545%, running total: 54.54000000000001%
🔍 Adding 4.545%, running total: 59.085000000000015%
🔍 Adding 4.545%, running total: 63.63000000000002%
🔍 Adding 4.545%, running total: 68.17500000000001%
🔍 Adding 4.545%, running total: 72.72000000000001%
🔍 Adding 4.545%, running total: 77.26500000000001%
🔍 Adding 4.545%, running total: 81.81000000000002%
🔍 Adding 4.545%, running total: 86.35500000000002%
🔍 Adding 4.545%, running total: 90.90000000000002%
🔍 Adding 4.545%, running total: 95.44500000000002%
🔍 Adding 4.545%, running total: 99.99000000000002%
🔍 Final amortization total: 99.99000000000002% (VALID)
🔄 Using predefined cash flows: 34 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-15',
  outstandingRatio: 1,
  note: 'No amortization yet - using full face value'
}
💰 Cash flow filtering: Total 34 → Future 26 (settlement: 2025-06-15)
📥 Backend received: {
  marketPrice: 100,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2038-01-09'
}
🔍 Calculation inputs - Price: 100, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 100
🔍 Price input: 100 (100.00% of face value)
🔍 Effective dollar price: $1000 (100% of $1000)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 26,
  price: 100,
  settlementDate: '2025-06-15',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-15',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 1000
  - Cash Flows: 26
  - Total CF Amount: 1387.5
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 1387.5
  - Target Price: 1000
  - Total Return: 1.3875
  - Average Time: 6.49 years
  - Simple: 5.18%, Current Yield: 34.64%, IRR: 5.44%
  - Final Guess: 5.44%
    Iteration 0: yield = 5.444%, error = 0.002888
    Iteration 5: yield = 5.444%, error = 0.000000
  ✅ Newton-Raphson converged: YTM = 5.444%
🔄 Z-Spread Calculation:
  - Target Price: 1000
  - Cash Flows: 26
  - Z-Spread converged: 61 bps
🔍 RAW CALCULATOR RESULT: {
  yields: { ytm: 5.444247889130587, ytw: 5.444247889130587, current: 5 },
  risk: {
    modifiedDuration: 5.569608443259937,
    macaulayDuration: 5.872831733364954,
    effectiveDuration: 5.569609242525908,
    convexity: 46.51792409336783,
    dv01: 0.5569608443259938
  },
  price: {
    clean: 100,
    dirty: 100,
    cleanDollar: 1000,
    dirtyDollar: 1000,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 7.3172270499657746,
    totalCashFlows: 1387.5,
    daysToNextPayment: 24,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 25
  },
  spreads: { treasury: 60.42478891305869, zSpread: 60.58349609374999 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 100,
  dirty: 100,
  cleanDollar: 1000,
  dirtyDollar: 1000,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 5.444247889130587,
  duration: 5.569608443259937,
  cleanPrice: 100,
  spread: 60.42478891305869
}
10:59:58 AM [express] POST /api/bonds/build 200 in 27ms :: {"bond":{"issuer":"REPUBLIC OF ARGENTINA",…
10:59:58 AM [express] GET /api/bonds/saved 304 in 1ms :: {"bonds":[{"filename":"GD29_ARGENTINA_100pct…
10:59:58 AM [express] GET /api/bonds/saved 304 in 4ms :: {"bonds":[{"filename":"GD29_ARGENTINA_100pct…
10:59:58 AM [express] GET /api/bonds/saved/GD38_ARGENTINA_5pct_20380109.json 304 in 1ms :: {"metadata…
🔍 buildBond received bond with predefinedCashFlows: 34
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 22 entries
🔍 Adding 4.545%, running total: 4.545%
🔍 Adding 4.545%, running total: 9.09%
🔍 Adding 4.545%, running total: 13.635%
🔍 Adding 4.545%, running total: 18.18%
🔍 Adding 4.545%, running total: 22.725%
🔍 Adding 4.545%, running total: 27.270000000000003%
🔍 Adding 4.545%, running total: 31.815000000000005%
🔍 Adding 4.545%, running total: 36.36000000000001%
🔍 Adding 4.545%, running total: 40.90500000000001%
🔍 Adding 4.545%, running total: 45.45000000000001%
🔍 Adding 4.545%, running total: 49.99500000000001%
🔍 Adding 4.545%, running total: 54.54000000000001%
🔍 Adding 4.545%, running total: 59.085000000000015%
🔍 Adding 4.545%, running total: 63.63000000000002%
🔍 Adding 4.545%, running total: 68.17500000000001%
🔍 Adding 4.545%, running total: 72.72000000000001%
🔍 Adding 4.545%, running total: 77.26500000000001%
🔍 Adding 4.545%, running total: 81.81000000000002%
🔍 Adding 4.545%, running total: 86.35500000000002%
🔍 Adding 4.545%, running total: 90.90000000000002%
🔍 Adding 4.545%, running total: 95.44500000000002%
🔍 Adding 4.545%, running total: 99.99000000000002%
🔍 Final amortization total: 99.99000000000002% (VALID)
🔄 Using predefined cash flows: 34 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-15',
  outstandingRatio: 1,
  note: 'No amortization yet - using full face value'
}
💰 Cash flow filtering: Total 34 → Future 26 (settlement: 2025-06-15)
📥 Backend received: {
  marketPrice: 100,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2038-01-09'
}
🔍 Calculation inputs - Price: 100, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 100
🔍 Price input: 100 (100.00% of face value)
🔍 Effective dollar price: $1000 (100% of $1000)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 26,
  price: 100,
  settlementDate: '2025-06-15',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-15',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 1000
  - Cash Flows: 26
  - Total CF Amount: 1387.5
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 1387.5
  - Target Price: 1000
  - Total Return: 1.3875
  - Average Time: 6.49 years
  - Simple: 5.18%, Current Yield: 34.64%, IRR: 5.44%
  - Final Guess: 5.44%
    Iteration 0: yield = 5.444%, error = 0.002888
    Iteration 5: yield = 5.444%, error = 0.000000
  ✅ Newton-Raphson converged: YTM = 5.444%
🔄 Z-Spread Calculation:
  - Target Price: 1000
  - Cash Flows: 26
  - Z-Spread converged: 61 bps
🔍 RAW CALCULATOR RESULT: {
  yields: { ytm: 5.444247889130587, ytw: 5.444247889130587, current: 5 },
  risk: {
    modifiedDuration: 5.569608443259937,
    macaulayDuration: 5.872831733364954,
    effectiveDuration: 5.569609242525908,
    convexity: 46.51792409336783,
    dv01: 0.5569608443259938
  },
  price: {
    clean: 100,
    dirty: 100,
    cleanDollar: 1000,
    dirtyDollar: 1000,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 7.3172270499657746,
    totalCashFlows: 1387.5,
    daysToNextPayment: 24,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 25
  },
  spreads: { treasury: 60.42478891305869, zSpread: 60.58349609374999 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 100,
  dirty: 100,
  cleanDollar: 1000,
  dirtyDollar: 1000,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 5.444247889130587,
  duration: 5.569608443259937,
  cleanPrice: 100,
  spread: 60.42478891305869
}
10:59:58 AM [express] POST /api/bonds/build 200 in 39ms :: {"bond":{"issuer":"REPUBLIC OF ARGENTINA",…
10:59:58 AM [express] GET /api/bonds/saved 304 in 4ms :: {"bonds":[{"filename":"GD29_ARGENTINA_100pct…
📊 Calculate request received with predefinedCashFlows? true
📊 Number of predefined cash flows: 34
📊 Parsed bond data has predefinedCashFlows? true
🔍 buildBond received bond with predefinedCashFlows: 34
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 22 entries
🔍 Adding 4.545%, running total: 4.545%
🔍 Adding 4.545%, running total: 9.09%
🔍 Adding 4.545%, running total: 13.635%
🔍 Adding 4.545%, running total: 18.18%
🔍 Adding 4.545%, running total: 22.725%
🔍 Adding 4.545%, running total: 27.270000000000003%
🔍 Adding 4.545%, running total: 31.815000000000005%
🔍 Adding 4.545%, running total: 36.36000000000001%
🔍 Adding 4.545%, running total: 40.90500000000001%
🔍 Adding 4.545%, running total: 45.45000000000001%
🔍 Adding 4.545%, running total: 49.99500000000001%
🔍 Adding 4.545%, running total: 54.54000000000001%
🔍 Adding 4.545%, running total: 59.085000000000015%
🔍 Adding 4.545%, running total: 63.63000000000002%
🔍 Adding 4.545%, running total: 68.17500000000001%
🔍 Adding 4.545%, running total: 72.72000000000001%
🔍 Adding 4.545%, running total: 77.26500000000001%
🔍 Adding 4.545%, running total: 81.81000000000002%
🔍 Adding 4.545%, running total: 86.35500000000002%
🔍 Adding 4.545%, running total: 90.90000000000002%
🔍 Adding 4.545%, running total: 95.44500000000002%
🔍 Adding 4.545%, running total: 99.99000000000002%
🔍 Final amortization total: 99.99000000000002% (VALID)
🔄 Using predefined cash flows: 34 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-15',
  outstandingRatio: 1,
  note: 'No amortization yet - using full face value'
}
💰 Cash flow filtering: Total 34 → Future 26 (settlement: 2025-06-15)
📥 Backend received: {
  marketPrice: 100,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2038-01-09'
}
🔍 Calculation inputs - Price: 100, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 100
🔍 Price input: 100 (100.00% of face value)
🔍 Effective dollar price: $1000 (100% of $1000)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 26,
  price: 100,
  settlementDate: '2025-06-15',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-15',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 1000
  - Cash Flows: 26
  - Total CF Amount: 1387.5
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 1387.5
  - Target Price: 1000
  - Total Return: 1.3875
  - Average Time: 6.49 years
  - Simple: 5.18%, Current Yield: 34.64%, IRR: 5.44%
  - Final Guess: 5.44%
    Iteration 0: yield = 5.444%, error = 0.002888
    Iteration 5: yield = 5.444%, error = 0.000000
  ✅ Newton-Raphson converged: YTM = 5.444%
🔄 Z-Spread Calculation:
  - Target Price: 1000
  - Cash Flows: 26
  - Z-Spread converged: 61 bps
🔍 RAW CALCULATOR RESULT: {
  yields: { ytm: 5.444247889130587, ytw: 5.444247889130587, current: 5 },
  risk: {
    modifiedDuration: 5.569608443259937,
    macaulayDuration: 5.872831733364954,
    effectiveDuration: 5.569609242525908,
    convexity: 46.51792409336783,
    dv01: 0.5569608443259938
  },
  price: {
    clean: 100,
    dirty: 100,
    cleanDollar: 1000,
    dirtyDollar: 1000,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 7.3172270499657746,
    totalCashFlows: 1387.5,
    daysToNextPayment: 24,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 25
  },
  spreads: { treasury: 60.42478891305869, zSpread: 60.58349609374999 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 100,
  dirty: 100,
  cleanDollar: 1000,
  dirtyDollar: 1000,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 5.444247889130587,
  duration: 5.569608443259937,
  cleanPrice: 100,
  spread: 60.42478891305869
}
10:59:58 AM [express] POST /api/bonds/calculate 200 in 42ms :: {"analytics":{"yieldToMaturity":5.4442…
📊 Calculate request received with predefinedCashFlows? true
📊 Number of predefined cash flows: 34
📊 Parsed bond data has predefinedCashFlows? true
🔍 buildBond received bond with predefinedCashFlows: 34
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 22 entries
🔍 Adding 4.545%, running total: 4.545%
🔍 Adding 4.545%, running total: 9.09%
🔍 Adding 4.545%, running total: 13.635%
🔍 Adding 4.545%, running total: 18.18%
🔍 Adding 4.545%, running total: 22.725%
🔍 Adding 4.545%, running total: 27.270000000000003%
🔍 Adding 4.545%, running total: 31.815000000000005%
🔍 Adding 4.545%, running total: 36.36000000000001%
🔍 Adding 4.545%, running total: 40.90500000000001%
🔍 Adding 4.545%, running total: 45.45000000000001%
🔍 Adding 4.545%, running total: 49.99500000000001%
🔍 Adding 4.545%, running total: 54.54000000000001%
🔍 Adding 4.545%, running total: 59.085000000000015%
🔍 Adding 4.545%, running total: 63.63000000000002%
🔍 Adding 4.545%, running total: 68.17500000000001%
🔍 Adding 4.545%, running total: 72.72000000000001%
🔍 Adding 4.545%, running total: 77.26500000000001%
🔍 Adding 4.545%, running total: 81.81000000000002%
🔍 Adding 4.545%, running total: 86.35500000000002%
🔍 Adding 4.545%, running total: 90.90000000000002%
🔍 Adding 4.545%, running total: 95.44500000000002%
🔍 Adding 4.545%, running total: 99.99000000000002%
🔍 Final amortization total: 99.99000000000002% (VALID)
🔄 Using predefined cash flows: 34 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-15',
  outstandingRatio: 1,
  note: 'No amortization yet - using full face value'
}
💰 Cash flow filtering: Total 34 → Future 26 (settlement: 2025-06-15)
📥 Backend received: {
  marketPrice: 70,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2038-01-09'
}
🔍 Calculation inputs - Price: 70, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 70
🔍 Price input: 70 (70.00% of face value)
🔍 Effective dollar price: $700 (70% of $1000)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 26,
  price: 70,
  settlementDate: '2025-06-15',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-15',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 700
  - Cash Flows: 26
  - Total CF Amount: 1387.5
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 1387.5
  - Target Price: 700
  - Total Return: 1.9821
  - Average Time: 6.49 years
  - Simple: 11.12%, Current Yield: 42.87%, IRR: 12.49%
  - Final Guess: 12.49%
    Iteration 0: yield = 12.490%, error = 0.000004
  ✅ Newton-Raphson converged: YTM = 12.490%
🔄 Z-Spread Calculation:
  - Target Price: 700
  - Cash Flows: 26
  - Z-Spread final: 500 bps
🔍 RAW CALCULATOR RESULT: {
  yields: {
    ytm: 12.49047224103254,
    ytw: 12.49047224103254,
    current: 7.142857142857142
  },
  risk: {
    modifiedDuration: 4.591186772114019,
    macaulayDuration: 5.164647681418879,
    effectiveDuration: 4.591187285397992,
    convexity: 33.43362930831681,
    dv01: 0.32138307404798133
  },
  price: {
    clean: 70,
    dirty: 70,
    cleanDollar: 700,
    dirtyDollar: 700,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 7.3172270499657746,
    totalCashFlows: 1387.5,
    daysToNextPayment: 24,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 25
  },
  spreads: { treasury: 765.047224103254, zSpread: 499.9999999999998 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 70,
  dirty: 70,
  cleanDollar: 700,
  dirtyDollar: 700,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 12.49047224103254,
  duration: 4.591186772114019,
  cleanPrice: 70,
  spread: 765.047224103254
}
11:00:07 AM [express] POST /api/bonds/calculate 200 in 52ms :: {"analytics":{"yieldToMaturity":12.490…
📊 Calculate request received with predefinedCashFlows? true
📊 Number of predefined cash flows: 34
📊 Parsed bond data has predefinedCashFlows? true
🔍 buildBond received bond with predefinedCashFlows: 34
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 22 entries
🔍 Adding 4.545%, running total: 4.545%
🔍 Adding 4.545%, running total: 9.09%
🔍 Adding 4.545%, running total: 13.635%
🔍 Adding 4.545%, running total: 18.18%
🔍 Adding 4.545%, running total: 22.725%
🔍 Adding 4.545%, running total: 27.270000000000003%
🔍 Adding 4.545%, running total: 31.815000000000005%
🔍 Adding 4.545%, running total: 36.36000000000001%
🔍 Adding 4.545%, running total: 40.90500000000001%
🔍 Adding 4.545%, running total: 45.45000000000001%
🔍 Adding 4.545%, running total: 49.99500000000001%
🔍 Adding 4.545%, running total: 54.54000000000001%
🔍 Adding 4.545%, running total: 59.085000000000015%
🔍 Adding 4.545%, running total: 63.63000000000002%
🔍 Adding 4.545%, running total: 68.17500000000001%
🔍 Adding 4.545%, running total: 72.72000000000001%
🔍 Adding 4.545%, running total: 77.26500000000001%
🔍 Adding 4.545%, running total: 81.81000000000002%
🔍 Adding 4.545%, running total: 86.35500000000002%
🔍 Adding 4.545%, running total: 90.90000000000002%
🔍 Adding 4.545%, running total: 95.44500000000002%
🔍 Adding 4.545%, running total: 99.99000000000002%
🔍 Final amortization total: 99.99000000000002% (VALID)
🔄 Using predefined cash flows: 34 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-15',
  outstandingRatio: 1,
  note: 'No amortization yet - using full face value'
}
💰 Cash flow filtering: Total 34 → Future 26 (settlement: 2025-06-15)
📥 Backend received: {
  marketPrice: 100,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2038-01-09'
}
🔍 Calculation inputs - Price: 100, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 100
🔍 Price input: 100 (100.00% of face value)
🔍 Effective dollar price: $1000 (100% of $1000)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 26,
  price: 100,
  settlementDate: '2025-06-15',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-15',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 1000
  - Cash Flows: 26
  - Total CF Amount: 1387.5
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 1387.5
  - Target Price: 1000
  - Total Return: 1.3875
  - Average Time: 6.49 years
  - Simple: 5.18%, Current Yield: 34.64%, IRR: 5.44%
  - Final Guess: 5.44%
    Iteration 0: yield = 5.444%, error = 0.002888
    Iteration 5: yield = 5.444%, error = 0.000000
  ✅ Newton-Raphson converged: YTM = 5.444%
🔄 Z-Spread Calculation:
  - Target Price: 1000
  - Cash Flows: 26
  - Z-Spread converged: 61 bps
🔍 RAW CALCULATOR RESULT: {
  yields: { ytm: 5.444247889130587, ytw: 5.444247889130587, current: 5 },
  risk: {
    modifiedDuration: 5.569608443259937,
    macaulayDuration: 5.872831733364954,
    effectiveDuration: 5.569609242525908,
    convexity: 46.51792409336783,
    dv01: 0.5569608443259938
  },
  price: {
    clean: 100,
    dirty: 100,
    cleanDollar: 1000,
    dirtyDollar: 1000,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 7.3172270499657746,
    totalCashFlows: 1387.5,
    daysToNextPayment: 24,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 25
  },
  spreads: { treasury: 60.42478891305869, zSpread: 60.58349609374999 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 100,
  dirty: 100,
  cleanDollar: 1000,
  dirtyDollar: 1000,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 5.444247889130587,
  duration: 5.569608443259937,
  cleanPrice: 100,
  spread: 60.42478891305869
}
11:00:11 AM [express] POST /api/bonds/calculate 200 in 51ms :: {"analytics":{"yieldToMaturity":5.4442…
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 183,
    "heapUsed": 119,
    "heapTotal": 141,
    "external": 11
  },
  "uptime": 59939
}
📊 Calculate request received with predefinedCashFlows? true
📊 Number of predefined cash flows: 34
📊 Parsed bond data has predefinedCashFlows? true
🔍 buildBond received bond with predefinedCashFlows: 34
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 22 entries
🔍 Adding 4.545%, running total: 4.545%
🔍 Adding 4.545%, running total: 9.09%
🔍 Adding 4.545%, running total: 13.635%
🔍 Adding 4.545%, running total: 18.18%
🔍 Adding 4.545%, running total: 22.725%
🔍 Adding 4.545%, running total: 27.270000000000003%
🔍 Adding 4.545%, running total: 31.815000000000005%
🔍 Adding 4.545%, running total: 36.36000000000001%
🔍 Adding 4.545%, running total: 40.90500000000001%
🔍 Adding 4.545%, running total: 45.45000000000001%
🔍 Adding 4.545%, running total: 49.99500000000001%
🔍 Adding 4.545%, running total: 54.54000000000001%
🔍 Adding 4.545%, running total: 59.085000000000015%
🔍 Adding 4.545%, running total: 63.63000000000002%
🔍 Adding 4.545%, running total: 68.17500000000001%
🔍 Adding 4.545%, running total: 72.72000000000001%
🔍 Adding 4.545%, running total: 77.26500000000001%
🔍 Adding 4.545%, running total: 81.81000000000002%
🔍 Adding 4.545%, running total: 86.35500000000002%
🔍 Adding 4.545%, running total: 90.90000000000002%
🔍 Adding 4.545%, running total: 95.44500000000002%
🔍 Adding 4.545%, running total: 99.99000000000002%
🔍 Final amortization total: 99.99000000000002% (VALID)
🔄 Using predefined cash flows: 34 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-15',
  outstandingRatio: 1,
  note: 'No amortization yet - using full face value'
}
💰 Cash flow filtering: Total 34 → Future 26 (settlement: 2025-06-15)
📥 Backend received: {
  marketPrice: 100,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2038-01-09'
}
🔍 Calculation inputs - Price: 100, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 100
🔍 Price input: 100 (100.00% of face value)
🔍 Effective dollar price: $1000 (100% of $1000)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 26,
  price: 100,
  settlementDate: '2025-06-15',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 1000,
  currentOutstanding: 1000,
  settlementDate: '2025-06-15',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 1000
  - Cash Flows: 26
  - Total CF Amount: 1387.5
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 1387.5
  - Target Price: 1000
  - Total Return: 1.3875
  - Average Time: 6.49 years
  - Simple: 5.18%, Current Yield: 34.64%, IRR: 5.44%
  - Final Guess: 5.44%
    Iteration 0: yield = 5.444%, error = 0.002888
    Iteration 5: yield = 5.444%, error = 0.000000
  ✅ Newton-Raphson converged: YTM = 5.444%
🔄 Z-Spread Calculation:
  - Target Price: 1000
  - Cash Flows: 26
  - Z-Spread converged: 61 bps
🔍 RAW CALCULATOR RESULT: {
  yields: { ytm: 5.444247889130587, ytw: 5.444247889130587, current: 5 },
  risk: {
    modifiedDuration: 5.569608443259937,
    macaulayDuration: 5.872831733364954,
    effectiveDuration: 5.569609242525908,
    convexity: 46.51792409336783,
    dv01: 0.5569608443259938
  },
  price: {
    clean: 100,
    dirty: 100,
    cleanDollar: 1000,
    dirtyDollar: 1000,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 7.3172270499657746,
    totalCashFlows: 1387.5,
    daysToNextPayment: 24,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 25
  },
  spreads: { treasury: 60.42478891305869, zSpread: 60.58349609374999 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 100,
  dirty: 100,
  cleanDollar: 1000,
  dirtyDollar: 1000,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 5.444247889130587,
  duration: 5.569608443259937,
  cleanPrice: 100,
  spread: 60.42478891305869
}
11:01:14 AM [express] POST /api/bonds/calculate 200 in 56ms :: {"analytics":{"yieldToMaturity":5.4442…
11:01:17 AM [express] GET /api/bonds/saved 304 in 15ms :: {"bonds":[{"filename":"GD29_ARGENTINA_100pc…
11:01:17 AM [express] GET /api/bonds/saved/GD30_ARGENTINA_075pct_20300709.json 304 in 2ms :: {"metada…
🔍 buildBond received bond with predefinedCashFlows: 19
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 13 entries
🔍 Adding 4%, running total: 4%
🔍 Adding 8%, running total: 12%
🔍 Adding 8%, running total: 20%
🔍 Adding 8%, running total: 28%
🔍 Adding 8%, running total: 36%
🔍 Adding 8%, running total: 44%
🔍 Adding 8%, running total: 52%
🔍 Adding 8%, running total: 60%
🔍 Adding 8%, running total: 68%
🔍 Adding 8%, running total: 76%
🔍 Adding 8%, running total: 84%
🔍 Adding 8%, running total: 92%
🔍 Adding 8%, running total: 100%
🔍 Final amortization total: 100% (VALID)
🔄 Using predefined cash flows: 19 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 880,
  settlementDate: '2025-06-15',
  outstandingRatio: 0.88,
  note: 'Using actual outstanding principal after amortization'
}
💰 Cash flow filtering: Total 19 → Future 11 (settlement: 2025-06-15)
📥 Backend received: {
  marketPrice: 100,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2030-07-09'
}
🔍 Calculation inputs - Price: 100, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 100
🔍 Price input: 100 (100.00% of outstanding principal)
🔍 Effective dollar price: $880 (100% of $880)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 11,
  price: 100,
  settlementDate: '2025-06-15',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 880,
  currentOutstanding: 880,
  settlementDate: '2025-06-15',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 880
  - Cash Flows: 11
  - Total CF Amount: 911
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 911
  - Target Price: 880
  - Total Return: 1.0352
  - Average Time: 2.56 years
  - Simple: 1.36%, Current Yield: 72.10%, IRR: 1.37%
  - Final Guess: 1.37%
    Iteration 0: yield = 1.373%, error = 0.002139
  ✅ Newton-Raphson converged: YTM = 1.373%
🔄 Z-Spread Calculation:
  - Target Price: 880
  - Cash Flows: 11
  - Z-Spread final: -100 bps
🔍 RAW CALCULATOR RESULT: {
  yields: {
    ytm: 1.3733339490651717,
    ytw: 1.3733339490651717,
    current: 0.7159090909090909
  },
  risk: {
    modifiedDuration: 2.4871377678796,
    macaulayDuration: 2.5212944752059125,
    effectiveDuration: 2.48713787422919,
    convexity: 11.053235042653402,
    dv01: 0.21886812357340482
  },
  price: {
    clean: 100,
    dirty: 100,
    cleanDollar: 880,
    dirtyDollar: 880,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 2.567108456225499,
    totalCashFlows: 911,
    daysToNextPayment: 24,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 83.3
  },
  spreads: { treasury: -346.6666050934828, zSpread: -99.99999999999974 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 100,
  dirty: 100,
  cleanDollar: 880,
  dirtyDollar: 880,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 1.3733339490651717,
  duration: 2.4871377678796,
  cleanPrice: 100,
  spread: -346.6666050934828
}
11:01:17 AM [express] POST /api/bonds/build 200 in 26ms :: {"bond":{"issuer":"REPUBLIC OF ARGENTINA",…
11:01:17 AM [express] GET /api/bonds/saved 304 in 1ms :: {"bonds":[{"filename":"GD29_ARGENTINA_100pct…
📊 Calculate request received with predefinedCashFlows? true
📊 Number of predefined cash flows: 19
📊 Parsed bond data has predefinedCashFlows? true
🔍 buildBond received bond with predefinedCashFlows: 19
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 13 entries
🔍 Adding 4%, running total: 4%
🔍 Adding 8%, running total: 12%
🔍 Adding 8%, running total: 20%
🔍 Adding 8%, running total: 28%
🔍 Adding 8%, running total: 36%
🔍 Adding 8%, running total: 44%
🔍 Adding 8%, running total: 52%
🔍 Adding 8%, running total: 60%
🔍 Adding 8%, running total: 68%
🔍 Adding 8%, running total: 76%
🔍 Adding 8%, running total: 84%
🔍 Adding 8%, running total: 92%
🔍 Adding 8%, running total: 100%
🔍 Final amortization total: 100% (VALID)
🔄 Using predefined cash flows: 19 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 880,
  settlementDate: '2025-06-15',
  outstandingRatio: 0.88,
  note: 'Using actual outstanding principal after amortization'
}
💰 Cash flow filtering: Total 19 → Future 11 (settlement: 2025-06-15)
📥 Backend received: {
  marketPrice: 100,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2030-07-09'
}
🔍 Calculation inputs - Price: 100, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 100
🔍 Price input: 100 (100.00% of outstanding principal)
🔍 Effective dollar price: $880 (100% of $880)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 11,
  price: 100,
  settlementDate: '2025-06-15',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 880,
  currentOutstanding: 880,
  settlementDate: '2025-06-15',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 880
  - Cash Flows: 11
  - Total CF Amount: 911
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 911
  - Target Price: 880
  - Total Return: 1.0352
  - Average Time: 2.56 years
  - Simple: 1.36%, Current Yield: 72.10%, IRR: 1.37%
  - Final Guess: 1.37%
    Iteration 0: yield = 1.373%, error = 0.002139
  ✅ Newton-Raphson converged: YTM = 1.373%
🔄 Z-Spread Calculation:
  - Target Price: 880
  - Cash Flows: 11
  - Z-Spread final: -100 bps
🔍 RAW CALCULATOR RESULT: {
  yields: {
    ytm: 1.3733339490651717,
    ytw: 1.3733339490651717,
    current: 0.7159090909090909
  },
  risk: {
    modifiedDuration: 2.4871377678796,
    macaulayDuration: 2.5212944752059125,
    effectiveDuration: 2.48713787422919,
    convexity: 11.053235042653402,
    dv01: 0.21886812357340482
  },
  price: {
    clean: 100,
    dirty: 100,
    cleanDollar: 880,
    dirtyDollar: 880,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 2.567108456225499,
    totalCashFlows: 911,
    daysToNextPayment: 24,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 83.3
  },
  spreads: { treasury: -346.6666050934828, zSpread: -99.99999999999974 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 100,
  dirty: 100,
  cleanDollar: 880,
  dirtyDollar: 880,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 1.3733339490651717,
  duration: 2.4871377678796,
  cleanPrice: 100,
  spread: -346.6666050934828
}
11:01:17 AM [express] POST /api/bonds/calculate 200 in 27ms :: {"analytics":{"yieldToMaturity":1.3733…
📊 Calculate request received with predefinedCashFlows? true
📊 Number of predefined cash flows: 19
📊 Parsed bond data has predefinedCashFlows? true
🔍 buildBond received bond with predefinedCashFlows: 19
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 13 entries
🔍 Adding 4%, running total: 4%
🔍 Adding 8%, running total: 12%
🔍 Adding 8%, running total: 20%
🔍 Adding 8%, running total: 28%
🔍 Adding 8%, running total: 36%
🔍 Adding 8%, running total: 44%
🔍 Adding 8%, running total: 52%
🔍 Adding 8%, running total: 60%
🔍 Adding 8%, running total: 68%
🔍 Adding 8%, running total: 76%
🔍 Adding 8%, running total: 84%
🔍 Adding 8%, running total: 92%
🔍 Adding 8%, running total: 100%
🔍 Final amortization total: 100% (VALID)
🔄 Using predefined cash flows: 19 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 880,
  settlementDate: '2025-06-15',
  outstandingRatio: 0.88,
  note: 'Using actual outstanding principal after amortization'
}
💰 Cash flow filtering: Total 19 → Future 11 (settlement: 2025-06-15)
📥 Backend received: {
  marketPrice: 80,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2030-07-09'
}
🔍 Calculation inputs - Price: 80, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 80
🔍 Price input: 80 (80.00% of outstanding principal)
🔍 Effective dollar price: $704 (80% of $880)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 11,
  price: 80,
  settlementDate: '2025-06-15',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 880,
  currentOutstanding: 880,
  settlementDate: '2025-06-15',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 704
  - Cash Flows: 11
  - Total CF Amount: 911
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 911
  - Target Price: 704
  - Total Return: 1.2940
  - Average Time: 2.56 years
  - Simple: 10.61%, Current Yield: 80.34%, IRR: 11.22%
  - Final Guess: 11.22%
    Iteration 0: yield = 11.222%, error = 0.000240
    Iteration 5: yield = 11.222%, error = 0.000000
  ✅ Newton-Raphson converged: YTM = 11.222%
🔄 Z-Spread Calculation:
  - Target Price: 704
  - Cash Flows: 11
  - Z-Spread final: 500 bps
🔍 RAW CALCULATOR RESULT: {
  yields: {
    ytm: 11.22185186704223,
    ytw: 11.22185186704223,
    current: 0.8948863636363636
  },
  risk: {
    modifiedDuration: 2.061483365971711,
    macaulayDuration: 2.2928199755647727,
    effectiveDuration: 2.0614834353642624,
    convexity: 8.073564850611023,
    dv01: 0.14512842896440847
  },
  price: {
    clean: 80,
    dirty: 80,
    cleanDollar: 704,
    dirtyDollar: 704,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 2.567108456225499,
    totalCashFlows: 911,
    daysToNextPayment: 24,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 83.3
  },
  spreads: { treasury: 638.1851867042229, zSpread: 499.9999999999998 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 80,
  dirty: 80,
  cleanDollar: 704,
  dirtyDollar: 704,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 11.22185186704223,
  duration: 2.061483365971711,
  cleanPrice: 80,
  spread: 638.1851867042229
}
11:01:20 AM [express] POST /api/bonds/calculate 200 in 36ms :: {"analytics":{"yieldToMaturity":11.221…
📊 Calculate request received with predefinedCashFlows? true
📊 Number of predefined cash flows: 19
📊 Parsed bond data has predefinedCashFlows? true
🔍 buildBond received bond with predefinedCashFlows: 19
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 13 entries
🔍 Adding 4%, running total: 4%
🔍 Adding 8%, running total: 12%
🔍 Adding 8%, running total: 20%
🔍 Adding 8%, running total: 28%
🔍 Adding 8%, running total: 36%
🔍 Adding 8%, running total: 44%
🔍 Adding 8%, running total: 52%
🔍 Adding 8%, running total: 60%
🔍 Adding 8%, running total: 68%
🔍 Adding 8%, running total: 76%
🔍 Adding 8%, running total: 84%
🔍 Adding 8%, running total: 92%
🔍 Adding 8%, running total: 100%
🔍 Final amortization total: 100% (VALID)
🔄 Using predefined cash flows: 19 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 880,
  settlementDate: '2025-06-15',
  outstandingRatio: 0.88,
  note: 'Using actual outstanding principal after amortization'
}
💰 Cash flow filtering: Total 19 → Future 11 (settlement: 2025-06-15)
📥 Backend received: {
  marketPrice: 82,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2030-07-09'
}
🔍 Calculation inputs - Price: 82, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 82
🔍 Price input: 82 (82.00% of outstanding principal)
🔍 Effective dollar price: $721.5999999999999 (82% of $880)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 11,
  price: 82,
  settlementDate: '2025-06-15',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 880,
  currentOutstanding: 880,
  settlementDate: '2025-06-15',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 721.5999999999999
  - Cash Flows: 11
  - Total CF Amount: 911
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 911
  - Target Price: 721.5999999999999
  - Total Return: 1.2625
  - Average Time: 2.56 years
  - Simple: 9.55%, Current Yield: 79.34%, IRR: 10.04%
  - Final Guess: 10.04%
    Iteration 0: yield = 10.037%, error = 0.000418
    Iteration 5: yield = 10.037%, error = 0.000000
  ✅ Newton-Raphson converged: YTM = 10.037%
🔄 Z-Spread Calculation:
  - Target Price: 721.5999999999999
  - Cash Flows: 11
  - Z-Spread final: 500 bps
🔍 RAW CALCULATOR RESULT: {
  yields: {
    ytm: 10.037185081075203,
    ytw: 10.037185081075203,
    current: 0.8730598669623061
  },
  risk: {
    modifiedDuration: 2.1074377316029724,
    macaulayDuration: 2.3189651571923755,
    effectiveDuration: 2.1074378045486015,
    convexity: 8.376234271537474,
    dv01: 0.15207270671247047
  },
  price: {
    clean: 82,
    dirty: 82,
    cleanDollar: 721.5999999999999,
    dirtyDollar: 721.5999999999999,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 2.567108456225499,
    totalCashFlows: 911,
    daysToNextPayment: 24,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 83.3
  },
  spreads: { treasury: 519.7185081075203, zSpread: 499.9999999999998 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 82,
  dirty: 82,
  cleanDollar: 721.5999999999999,
  dirtyDollar: 721.5999999999999,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 10.037185081075203,
  duration: 2.1074377316029724,
  cleanPrice: 82,
  spread: 519.7185081075203
}
11:01:25 AM [express] POST /api/bonds/calculate 200 in 35ms :: {"analytics":{"yieldToMaturity":10.037…
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 172,
    "heapUsed": 119,
    "heapTotal": 129,
    "external": 11
  },
  "uptime": 59999
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 171,
    "heapUsed": 119,
    "heapTotal": 129,
    "external": 11
  },
  "uptime": 60059
}
11:03:02 AM [vite] hmr update /src/pages/bond-calculator.tsx, /src/index.css?v=ml9r0luq60-9MZWIc3OQV
11:03:02 AM [express] GET /api/bonds/saved 304 in 2ms :: {"bonds":[{"filename":"GD29_ARGENTINA_100pct…
11:03:02 AM [express] GET /api/bonds/saved/GD30_ARGENTINA_075pct_20300709.json 304 in 0ms :: {"metada…
🔍 buildBond received bond with predefinedCashFlows: 19
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 13 entries
🔍 Adding 4%, running total: 4%
🔍 Adding 8%, running total: 12%
🔍 Adding 8%, running total: 20%
🔍 Adding 8%, running total: 28%
🔍 Adding 8%, running total: 36%
🔍 Adding 8%, running total: 44%
🔍 Adding 8%, running total: 52%
🔍 Adding 8%, running total: 60%
🔍 Adding 8%, running total: 68%
🔍 Adding 8%, running total: 76%
🔍 Adding 8%, running total: 84%
🔍 Adding 8%, running total: 92%
🔍 Adding 8%, running total: 100%
🔍 Final amortization total: 100% (VALID)
🔄 Using predefined cash flows: 19 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 880,
  settlementDate: '2025-06-15',
  outstandingRatio: 0.88,
  note: 'Using actual outstanding principal after amortization'
}
💰 Cash flow filtering: Total 19 → Future 11 (settlement: 2025-06-15)
📥 Backend received: {
  marketPrice: 80.19,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2030-07-09'
}
🔍 Calculation inputs - Price: 80.19, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 80.19
🔍 Price input: 80.19 (80.19% of outstanding principal)
🔍 Effective dollar price: $705.6719999999999 (80.19% of $880)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 11,
  price: 80.19,
  settlementDate: '2025-06-15',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 880,
  currentOutstanding: 880,
  settlementDate: '2025-06-15',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 705.6719999999999
  - Cash Flows: 11
  - Total CF Amount: 911
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 911
  - Target Price: 705.6719999999999
  - Total Return: 1.2910
  - Average Time: 2.56 years
  - Simple: 10.51%, Current Yield: 80.24%, IRR: 11.11%
  - Final Guess: 11.11%
    Iteration 0: yield = 11.107%, error = 0.000163
    Iteration 5: yield = 11.107%, error = 0.000000
  ✅ Newton-Raphson converged: YTM = 11.107%
🔄 Z-Spread Calculation:
  - Target Price: 705.6719999999999
  - Cash Flows: 11
  - Z-Spread final: 500 bps
🔍 RAW CALCULATOR RESULT: {
  yields: {
    ytm: 11.106902817967793,
    ytw: 11.106902817967793,
    current: 0.892766044281196
  },
  risk: {
    modifiedDuration: 2.065884948499426,
    macaulayDuration: 2.295340782060282,
    effectiveDuration: 2.0658850182275996,
    convexity: 8.102354155020903,
    dv01: 0.1457837163377487
  },
  price: {
    clean: 80.19,
    dirty: 80.19,
    cleanDollar: 705.6719999999999,
    dirtyDollar: 705.6719999999999,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 2.567108456225499,
    totalCashFlows: 911,
    daysToNextPayment: 24,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 83.3
  },
  spreads: { treasury: 626.6902817967793, zSpread: 499.9999999999998 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 80.19,
  dirty: 80.19,
  cleanDollar: 705.6719999999999,
  dirtyDollar: 705.6719999999999,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 11.106902817967793,
  duration: 2.065884948499426,
  cleanPrice: 80.19,
  spread: 626.6902817967793
}
11:03:02 AM [express] POST /api/bonds/build 200 in 15ms :: {"bond":{"issuer":"REPUBLIC OF ARGENTINA",…
11:03:02 AM [express] GET /api/bonds/saved 304 in 1ms :: {"bonds":[{"filename":"GD29_ARGENTINA_100pct…
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 186,
    "heapUsed": 127,
    "heapTotal": 137,
    "external": 11
  },
  "uptime": 60119
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 186,
    "heapUsed": 127,
    "heapTotal": 137,
    "external": 11
  },
  "uptime": 60179
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 186,
    "heapUsed": 127,
    "heapTotal": 137,
    "external": 11
  },
  "uptime": 60239
}
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 186,
    "heapUsed": 127,
    "heapTotal": 137,
    "external": 11
  },
  "uptime": 60299
}
📊 Calculate request received with predefinedCashFlows? true
📊 Number of predefined cash flows: 19
📊 Parsed bond data has predefinedCashFlows? true
🔍 buildBond received bond with predefinedCashFlows: 19
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 13 entries
🔍 Adding 4%, running total: 4%
🔍 Adding 8%, running total: 12%
🔍 Adding 8%, running total: 20%
🔍 Adding 8%, running total: 28%
🔍 Adding 8%, running total: 36%
🔍 Adding 8%, running total: 44%
🔍 Adding 8%, running total: 52%
🔍 Adding 8%, running total: 60%
🔍 Adding 8%, running total: 68%
🔍 Adding 8%, running total: 76%
🔍 Adding 8%, running total: 84%
🔍 Adding 8%, running total: 92%
🔍 Adding 8%, running total: 100%
🔍 Final amortization total: 100% (VALID)
🔄 Using predefined cash flows: 19 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 880,
  settlementDate: '2025-06-15',
  outstandingRatio: 0.88,
  note: 'Using actual outstanding principal after amortization'
}
💰 Cash flow filtering: Total 19 → Future 11 (settlement: 2025-06-15)
📥 Backend received: {
  marketPrice: undefined,
  targetYield: 10.037,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2030-07-09'
}
🔍 Calculation inputs - Price: undefined, Yield: 10.037, Spread: undefined
🎯 YTM → Price mode. Target YTM: 10.037
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 880,
  currentOutstanding: 880,
  settlementDate: '2025-06-15',
  outstandingRatio: 1
}
🔄 Z-Spread Calculation:
  - Target Price: 721.6028145884466
  - Cash Flows: 11
  - Z-Spread final: 500 bps
🔍 RAW CALCULATOR RESULT: {
  yields: { ytm: 10.037, ytw: 10.037, current: 0.8730564616205237 },
  risk: {
    modifiedDuration: 2.1074450144494414,
    macaulayDuration: 2.318969270549732,
    effectiveDuration: 2.1074450873956407,
    convexity: 8.37628260585784,
    dv01: 0.15207382540171063
  },
  price: {
    clean: 82.0003198395962,
    dirty: 82.0003198395962,
    cleanDollar: 721.6028145884466,
    dirtyDollar: 721.6028145884466,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 2.567108456225499,
    totalCashFlows: 911,
    daysToNextPayment: 24,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 83.3
  },
  spreads: { treasury: 519.7, zSpread: 499.9999999999998 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 82.0003198395962,
  dirty: 82.0003198395962,
  cleanDollar: 721.6028145884466,
  dirtyDollar: 721.6028145884466,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 10.037,
  duration: 2.1074450144494414,
  cleanPrice: 82.0003198395962,
  spread: 519.7
}
11:07:24 AM [express] POST /api/bonds/calculate 200 in 21ms :: {"analytics":{"yieldToMaturity":10.037…
📊 Calculate request received with predefinedCashFlows? true
📊 Number of predefined cash flows: 19
📊 Parsed bond data has predefinedCashFlows? true
🔍 buildBond received bond with predefinedCashFlows: 19
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 13 entries
🔍 Adding 4%, running total: 4%
🔍 Adding 8%, running total: 12%
🔍 Adding 8%, running total: 20%
🔍 Adding 8%, running total: 28%
🔍 Adding 8%, running total: 36%
🔍 Adding 8%, running total: 44%
🔍 Adding 8%, running total: 52%
🔍 Adding 8%, running total: 60%
🔍 Adding 8%, running total: 68%
🔍 Adding 8%, running total: 76%
🔍 Adding 8%, running total: 84%
🔍 Adding 8%, running total: 92%
🔍 Adding 8%, running total: 100%
🔍 Final amortization total: 100% (VALID)
🔄 Using predefined cash flows: 19 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 880,
  settlementDate: '2025-06-15',
  outstandingRatio: 0.88,
  note: 'Using actual outstanding principal after amortization'
}
💰 Cash flow filtering: Total 19 → Future 11 (settlement: 2025-06-15)
📥 Backend received: {
  marketPrice: 82.82,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2030-07-09'
}
🔍 Calculation inputs - Price: 82.82, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 82.82
🔍 Price input: 82.82 (82.82% of outstanding principal)
🔍 Effective dollar price: $728.8159999999999 (82.82% of $880)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 11,
  price: 82.82,
  settlementDate: '2025-06-15',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 880,
  currentOutstanding: 880,
  settlementDate: '2025-06-15',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 728.8159999999999
  - Cash Flows: 11
  - Total CF Amount: 911
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 911
  - Target Price: 728.8159999999999
  - Total Return: 1.2500
  - Average Time: 2.56 years
  - Simple: 9.12%, Current Yield: 78.94%, IRR: 9.57%
  - Final Guess: 9.57%
    Iteration 0: yield = 9.567%, error = 0.000004
  ✅ Newton-Raphson converged: YTM = 9.567%
🔄 Z-Spread Calculation:
  - Target Price: 728.8159999999999
  - Cash Flows: 11
  - Z-Spread converged: 475 bps
🔍 RAW CALCULATOR RESULT: {
  yields: {
    ytm: 9.567102925356142,
    ytw: 9.567102925356142,
    current: 0.8644157098636693
  },
  risk: {
    modifiedDuration: 2.1260409312508965,
    macaulayDuration: 2.3294414553788703,
    effectiveDuration: 2.126041005663878,
    convexity: 8.500077858929371,
    dv01: 0.15494926473505533
  },
  price: {
    clean: 82.82,
    dirty: 82.82,
    cleanDollar: 728.8159999999999,
    dirtyDollar: 728.8159999999999,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 2.567108456225499,
    totalCashFlows: 911,
    daysToNextPayment: 24,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 83.3
  },
  spreads: { treasury: 472.71029253561426, zSpread: 474.65820312500006 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 82.82,
  dirty: 82.82,
  cleanDollar: 728.8159999999999,
  dirtyDollar: 728.8159999999999,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 9.567102925356142,
  duration: 2.1260409312508965,
  cleanPrice: 82.82,
  spread: 472.71029253561426
}
11:07:27 AM [express] POST /api/bonds/calculate 200 in 34ms :: {"analytics":{"yieldToMaturity":9.5671…
📊 Calculate request received with predefinedCashFlows? true
📊 Number of predefined cash flows: 19
📊 Parsed bond data has predefinedCashFlows? true
🔍 buildBond received bond with predefinedCashFlows: 19
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 13 entries
🔍 Adding 4%, running total: 4%
🔍 Adding 8%, running total: 12%
🔍 Adding 8%, running total: 20%
🔍 Adding 8%, running total: 28%
🔍 Adding 8%, running total: 36%
🔍 Adding 8%, running total: 44%
🔍 Adding 8%, running total: 52%
🔍 Adding 8%, running total: 60%
🔍 Adding 8%, running total: 68%
🔍 Adding 8%, running total: 76%
🔍 Adding 8%, running total: 84%
🔍 Adding 8%, running total: 92%
🔍 Adding 8%, running total: 100%
🔍 Final amortization total: 100% (VALID)
🔄 Using predefined cash flows: 19 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 880,
  settlementDate: '2025-06-15',
  outstandingRatio: 0.88,
  note: 'Using actual outstanding principal after amortization'
}
💰 Cash flow filtering: Total 19 → Future 11 (settlement: 2025-06-15)
📥 Backend received: {
  marketPrice: 82,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2030-07-09'
}
🔍 Calculation inputs - Price: 82, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 82
🔍 Price input: 82 (82.00% of outstanding principal)
🔍 Effective dollar price: $721.5999999999999 (82% of $880)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 11,
  price: 82,
  settlementDate: '2025-06-15',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 880,
  currentOutstanding: 880,
  settlementDate: '2025-06-15',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 721.5999999999999
  - Cash Flows: 11
  - Total CF Amount: 911
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 911
  - Target Price: 721.5999999999999
  - Total Return: 1.2625
  - Average Time: 2.56 years
  - Simple: 9.55%, Current Yield: 79.34%, IRR: 10.04%
  - Final Guess: 10.04%
    Iteration 0: yield = 10.037%, error = 0.000418
    Iteration 5: yield = 10.037%, error = 0.000000
  ✅ Newton-Raphson converged: YTM = 10.037%
🔄 Z-Spread Calculation:
  - Target Price: 721.5999999999999
  - Cash Flows: 11
  - Z-Spread final: 500 bps
🔍 RAW CALCULATOR RESULT: {
  yields: {
    ytm: 10.037185081075203,
    ytw: 10.037185081075203,
    current: 0.8730598669623061
  },
  risk: {
    modifiedDuration: 2.1074377316029724,
    macaulayDuration: 2.3189651571923755,
    effectiveDuration: 2.1074378045486015,
    convexity: 8.376234271537474,
    dv01: 0.15207270671247047
  },
  price: {
    clean: 82,
    dirty: 82,
    cleanDollar: 721.5999999999999,
    dirtyDollar: 721.5999999999999,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 2.567108456225499,
    totalCashFlows: 911,
    daysToNextPayment: 24,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 83.3
  },
  spreads: { treasury: 519.7185081075203, zSpread: 499.9999999999998 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 82,
  dirty: 82,
  cleanDollar: 721.5999999999999,
  dirtyDollar: 721.5999999999999,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 10.037185081075203,
  duration: 2.1074377316029724,
  cleanPrice: 82,
  spread: 519.7185081075203
}
11:07:42 AM [express] POST /api/bonds/calculate 200 in 38ms :: {"analytics":{"yieldToMaturity":10.037…
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 179,
    "heapUsed": 125,
    "heapTotal": 130,
    "external": 11
  },
  "uptime": 60359
}
📊 Calculate request received with predefinedCashFlows? true
📊 Number of predefined cash flows: 19
📊 Parsed bond data has predefinedCashFlows? true
🔍 buildBond received bond with predefinedCashFlows: 19
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 13 entries
🔍 Adding 4%, running total: 4%
🔍 Adding 8%, running total: 12%
🔍 Adding 8%, running total: 20%
🔍 Adding 8%, running total: 28%
🔍 Adding 8%, running total: 36%
🔍 Adding 8%, running total: 44%
🔍 Adding 8%, running total: 52%
🔍 Adding 8%, running total: 60%
🔍 Adding 8%, running total: 68%
🔍 Adding 8%, running total: 76%
🔍 Adding 8%, running total: 84%
🔍 Adding 8%, running total: 92%
🔍 Adding 8%, running total: 100%
🔍 Final amortization total: 100% (VALID)
🔄 Using predefined cash flows: 19 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 880,
  settlementDate: '2025-06-15',
  outstandingRatio: 0.88,
  note: 'Using actual outstanding principal after amortization'
}
💰 Cash flow filtering: Total 19 → Future 11 (settlement: 2025-06-15)
📥 Backend received: {
  marketPrice: 82.82,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2030-07-09'
}
🔍 Calculation inputs - Price: 82.82, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 82.82
🔍 Price input: 82.82 (82.82% of outstanding principal)
🔍 Effective dollar price: $728.8159999999999 (82.82% of $880)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 11,
  price: 82.82,
  settlementDate: '2025-06-15',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 880,
  currentOutstanding: 880,
  settlementDate: '2025-06-15',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 728.8159999999999
  - Cash Flows: 11
  - Total CF Amount: 911
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 911
  - Target Price: 728.8159999999999
  - Total Return: 1.2500
  - Average Time: 2.56 years
  - Simple: 9.12%, Current Yield: 78.94%, IRR: 9.57%
  - Final Guess: 9.57%
    Iteration 0: yield = 9.567%, error = 0.000004
  ✅ Newton-Raphson converged: YTM = 9.567%
🔄 Z-Spread Calculation:
  - Target Price: 728.8159999999999
  - Cash Flows: 11
  - Z-Spread converged: 475 bps
🔍 RAW CALCULATOR RESULT: {
  yields: {
    ytm: 9.567102925356142,
    ytw: 9.567102925356142,
    current: 0.8644157098636693
  },
  risk: {
    modifiedDuration: 2.1260409312508965,
    macaulayDuration: 2.3294414553788703,
    effectiveDuration: 2.126041005663878,
    convexity: 8.500077858929371,
    dv01: 0.15494926473505533
  },
  price: {
    clean: 82.82,
    dirty: 82.82,
    cleanDollar: 728.8159999999999,
    dirtyDollar: 728.8159999999999,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 2.567108456225499,
    totalCashFlows: 911,
    daysToNextPayment: 24,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 83.3
  },
  spreads: { treasury: 472.71029253561426, zSpread: 474.65820312500006 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 82.82,
  dirty: 82.82,
  cleanDollar: 728.8159999999999,
  dirtyDollar: 728.8159999999999,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 9.567102925356142,
  duration: 2.1260409312508965,
  cleanPrice: 82.82,
  spread: 472.71029253561426
}
11:08:02 AM [express] POST /api/bonds/calculate 200 in 32ms :: {"analytics":{"yieldToMaturity":9.5671…
📊 Calculate request received with predefinedCashFlows? true
📊 Number of predefined cash flows: 19
📊 Parsed bond data has predefinedCashFlows? true
🔍 buildBond received bond with predefinedCashFlows: 19
🔍 Bond issuer: REPUBLIC OF ARGENTINA, features: { isAmortizing: true, isVariableCoupon: true }
🔍 Validating amortization schedule with 13 entries
🔍 Adding 4%, running total: 4%
🔍 Adding 8%, running total: 12%
🔍 Adding 8%, running total: 20%
🔍 Adding 8%, running total: 28%
🔍 Adding 8%, running total: 36%
🔍 Adding 8%, running total: 44%
🔍 Adding 8%, running total: 52%
🔍 Adding 8%, running total: 60%
🔍 Adding 8%, running total: 68%
🔍 Adding 8%, running total: 76%
🔍 Adding 8%, running total: 84%
🔍 Adding 8%, running total: 92%
🔍 Adding 8%, running total: 100%
🔍 Final amortization total: 100% (VALID)
🔄 Using predefined cash flows: 19 flows
🔢 Market inputs provided, calculating full analytics
🚀 Using production bond calculator engine
🔍 OUTSTANDING PRINCIPAL CALCULATION: {
  originalFaceValue: 1000,
  currentOutstanding: 880,
  settlementDate: '2025-06-15',
  outstandingRatio: 0.88,
  note: 'Using actual outstanding principal after amortization'
}
💰 Cash flow filtering: Total 19 → Future 11 (settlement: 2025-06-15)
📥 Backend received: {
  marketPrice: 81.18,
  targetYield: undefined,
  targetSpread: undefined,
  issuer: 'REPUBLIC OF ARGENTINA',
  maturityDate: '2030-07-09'
}
🔍 Calculation inputs - Price: 81.18, Yield: undefined, Spread: undefined
🎯 Price → YTM mode. Market Price: 81.18
🔍 Price input: 81.18 (81.18% of outstanding principal)
🔍 Effective dollar price: $714.384 (81.18% of $880)
🔍 CALLING CALCULATOR ANALYZE with: {
  bondCashFlowCount: 11,
  price: 81.18,
  settlementDate: '2025-06-15',
  hasTreasuryCurve: true
}
🔍 OUTSTANDING PRINCIPAL DEBUG: {
  faceValue: 880,
  currentOutstanding: 880,
  settlementDate: '2025-06-15',
  outstandingRatio: 1
}
🎯 YTM Solver Starting:
  - Target Price: 714.384
  - Cash Flows: 11
  - Total CF Amount: 911
  🔧 Trying Newton-Raphson algorithm...
💡 Enhanced Initial YTM Guess:
  - Total CFs: 911
  - Target Price: 714.384
  - Total Return: 1.2752
  - Average Time: 2.56 years
  - Simple: 9.98%, Current Yield: 79.74%, IRR: 10.52%
  - Final Guess: 10.52%
    Iteration 0: yield = 10.516%, error = 0.000008
  ✅ Newton-Raphson converged: YTM = 10.516%
🔄 Z-Spread Calculation:
  - Target Price: 714.384
  - Cash Flows: 11
  - Z-Spread final: 500 bps
🔍 RAW CALCULATOR RESULT: {
  yields: {
    ytm: 10.516217491922887,
    ytw: 10.516217491922887,
    current: 0.8818786534972787
  },
  risk: {
    modifiedDuration: 2.088696957221897,
    macaulayDuration: 2.308348871990527,
    effectiveDuration: 2.088697028706414,
    convexity: 8.252242023840466,
    dv01: 0.14921316870880078
  },
  price: {
    clean: 81.18,
    dirty: 81.18,
    cleanDollar: 714.384,
    dirtyDollar: 714.384,
    accruedInterest: 0
  },
  analytics: {
    averageLife: 2.567108456225499,
    totalCashFlows: 911,
    daysToNextPayment: 24,
    nextPaymentDate: '2025-07-09',
    nextPaymentAmount: 83.3
  },
  spreads: { treasury: 567.6217491922888, zSpread: 499.9999999999998 }
}
🔍 PRICE FIELD DETAILED: {
  clean: 81.18,
  dirty: 81.18,
  cleanDollar: 714.384,
  dirtyDollar: 714.384,
  accruedInterest: 0
}
✅ FINAL ANALYTICS: {
  ytm: 10.516217491922887,
  duration: 2.088696957221897,
  cleanPrice: 81.18,
  spread: 567.6217491922888
}
11:08:10 AM [express] POST /api/bonds/calculate 200 in 35ms :: {"analytics":{"yieldToMaturity":10.516…
[36m[INFO][0m System performance metrics {
  "memoryUsage": {
    "rss": 180,
    "heapUsed": 125,
    "heapTotal": 132,
    "external": 11
  },
  "uptime": 60419
}
